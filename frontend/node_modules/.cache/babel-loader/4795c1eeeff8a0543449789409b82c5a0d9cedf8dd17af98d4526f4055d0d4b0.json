{"ast":null,"code":"import axios from \"axios\";\n\n// Base API URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"https://luct-7.onrender.com\";\nexport const API_ENDPOINTS = {\n  // Auth\n  REGISTER: `${API_BASE_URL}/api/auth/register`,\n  LOGIN: `${API_BASE_URL}/api/auth/login`,\n  ME: `${API_BASE_URL}/api/auth/me`,\n  // Data\n  FACULTIES: `${API_BASE_URL}/api/faculties`,\n  COURSES: `${API_BASE_URL}/api/courses`,\n  CLASSES: `${API_BASE_URL}/api/classes`,\n  MY_CLASSES: `${API_BASE_URL}/api/my-classes`,\n  LECTURERS: `${API_BASE_URL}/api/lecturers`,\n  // Reports\n  REPORTS: `${API_BASE_URL}/api/reports`,\n  REPORTS_STATS: `${API_BASE_URL}/api/reports/stats`,\n  REPORTS_BY_ID: id => `${API_BASE_URL}/api/reports/${id}`,\n  REPORTS_FEEDBACK: id => `${API_BASE_URL}/api/reports/${id}/feedback`,\n  MY_REPORTS: `${API_BASE_URL}/api/reports/my-reports`,\n  // Added for lecturer feedback\n\n  // Ratings\n  RATINGS: `${API_BASE_URL}/api/ratings`,\n  RATINGS_MY: `${API_BASE_URL}/api/ratings/my-ratings`,\n  RATINGS_LECTURER: `${API_BASE_URL}/api/ratings/lecturer`,\n  // Search\n  SEARCH: `${API_BASE_URL}/api/search`,\n  // Student\n  STUDENT_ATTENDANCE: `${API_BASE_URL}/api/students/attendance`,\n  STUDENT_STATS: `${API_BASE_URL}/api/students/stats`,\n  STUDENT_PERFORMANCE: `${API_BASE_URL}/api/students/performance`,\n  // Analytics\n  ANALYTICS_OVERVIEW: `${API_BASE_URL}/api/analytics/overview`,\n  ANALYTICS_TRENDS: `${API_BASE_URL}/api/analytics/trends`,\n  // User Management\n  USERS: `${API_BASE_URL}/api/users`,\n  USERS_UPDATE_ROLE: id => `${API_BASE_URL}/api/users/${id}/role`,\n  // Health\n  HEALTH: `${API_BASE_URL}/api/health`,\n  TEST: `${API_BASE_URL}/api/test`\n};\n\n// Get token from localStorage\nexport const getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n};\n\n// Enhanced API instance with interceptors\nconst apiInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 15000 // Increased to 15 seconds\n});\n\n// Request interceptor to add auth token\napiInstance.interceptors.request.use(config => {\n  var _config$method;\n  const token = getAuthToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  config.headers[\"Content-Type\"] = \"application/json\";\n\n  // Add timestamp for debugging\n  config.metadata = {\n    startTime: new Date()\n  };\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, config.data || config.params);\n  return config;\n}, error => {\n  console.error(\"❌ Request interceptor error:\", error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiInstance.interceptors.response.use(response => {\n  var _response$config$meth;\n  const endTime = new Date();\n  const duration = endTime - response.config.metadata.startTime;\n  console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, {\n    status: response.status,\n    duration: `${duration}ms`,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config$method, _error$config2, _error$response, _error$response2, _error$response3;\n  const endTime = new Date();\n  const duration = error.config ? endTime - error.config.metadata.startTime : 'N/A';\n  console.error(`💥 API Error: ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()} ${(_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url}`, {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    duration: `${duration}ms`,\n    error: error.message,\n    code: error.code,\n    responseData: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data // Log response data for debugging\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    console.warn(\"🔐 Authentication failed - redirecting to login\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setTimeout(() => {\n      window.location.href = \"/login\";\n    }, 100);\n  }\n  return Promise.reject(error);\n});\n\n// Enhanced API call wrapper with better error handling and retry logic\nexport const apiCall = async (endpoint, options = {}, retries = 2) => {\n  const maxRetries = retries;\n  try {\n    var _config$method2;\n    const config = {\n      url: endpoint,\n      ...options\n    };\n    console.log(`🔄 API Call attempt: ${((_config$method2 = config.method) === null || _config$method2 === void 0 ? void 0 : _config$method2.toUpperCase()) || 'GET'} ${endpoint} (${maxRetries - retries + 1}/${maxRetries + 1})`);\n    const response = await apiInstance(config);\n\n    // Handle HTML error responses (when backend returns HTML instead of JSON)\n    const contentType = response.headers['content-type'];\n    if (contentType && contentType.includes('text/html')) {\n      throw new Error(`Server returned HTML error page (Status: ${response.status})`);\n    }\n    return response.data;\n  } catch (error) {\n    var _options$method, _error$response4, _error$response5, _error$response6, _error$response6$data, _error$response7, _error$response8, _error$response9, _error$response9$stat, _error$response0, _error$response1, _error$response10, _error$response11, _error$response12, _error$response13;\n    const isTimeout = error.code === 'ECONNABORTED' || error.message.includes('timeout');\n    const isNetworkError = error.message.includes('Network Error') || !error.response;\n    const isCorsError = error.message.includes('CORS') || error.message.includes('Access-Control');\n    console.error(`❌ API Call failed: ${((_options$method = options.method) === null || _options$method === void 0 ? void 0 : _options$method.toUpperCase()) || 'GET'} ${endpoint}`, {\n      error: error.message,\n      code: error.code,\n      status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status,\n      responseData: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n      // Added for debugging 400 errors\n      isTimeout,\n      isNetworkError,\n      isCorsError,\n      retriesLeft: retries\n    });\n\n    // Enhanced error message extraction for 400 errors\n    let errorMessage = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || error.message || \"API request failed\";\n\n    // Extract validation errors from backend response\n    if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 400 && (_error$response8 = error.response) !== null && _error$response8 !== void 0 && _error$response8.data) {\n      if (typeof error.response.data === 'string') {\n        errorMessage = error.response.data;\n      } else if (error.response.data.errors) {\n        // Handle validation errors array\n        errorMessage = Object.values(error.response.data.errors).flat().join(', ');\n      } else if (error.response.data.error) {\n        errorMessage = error.response.data.error;\n      }\n    }\n\n    // Retry logic for timeout and network errors (but not for 4xx errors)\n    if ((isTimeout || isNetworkError) && retries > 0 && !((_error$response9 = error.response) !== null && _error$response9 !== void 0 && (_error$response9$stat = _error$response9.status) !== null && _error$response9$stat !== void 0 && _error$response9$stat.toString().startsWith('4'))) {\n      const delay = Math.pow(2, maxRetries - retries) * 1000; // Exponential backoff\n      console.log(`⏳ Retrying in ${delay}ms... (${retries} retries left)`);\n      await new Promise(resolve => setTimeout(resolve, delay));\n      return apiCall(endpoint, options, retries - 1);\n    }\n\n    // Enhanced error handling\n    if (((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.status) === 401) {\n      // Already handled in interceptor\n    }\n\n    // Enhanced error messages for specific cases\n    if (isCorsError) {\n      errorMessage = \"CORS error: Backend is not configured to accept requests from this origin. Please check backend CORS settings.\";\n    } else if (isTimeout) {\n      errorMessage = \"Backend server is not responding. Please check if the server is running.\";\n    } else if (isNetworkError) {\n      errorMessage = \"Network connection failed. Please check your internet connection.\";\n    } else if (((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.status) === 400) {\n      errorMessage = `Bad Request: ${errorMessage}`;\n    } else if (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status) === 404) {\n      errorMessage = \"Endpoint not found. The requested resource does not exist.\";\n    } else if (((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.status) === 500) {\n      errorMessage = \"Server error. Please try again later.\";\n    }\n    throw {\n      success: false,\n      message: errorMessage,\n      status: (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status,\n      code: error.code,\n      data: (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data,\n      isTimeout,\n      isNetworkError,\n      isCorsError\n    };\n  }\n};\n\n// Enhanced API methods with proper response handling\nexport const api = {\n  get: async (endpoint, params = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"GET\",\n        params\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Request successful\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  post: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"POST\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Created successfully\",\n        status: 201\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  put: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"PUT\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Updated successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  delete: async endpoint => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"DELETE\"\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Deleted successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  }\n};\n\n// Convenience methods for specific endpoints\nexport const apiMethods = {\n  // Auth\n  login: credentials => api.post(API_ENDPOINTS.LOGIN, credentials),\n  register: userData => api.post(API_ENDPOINTS.REGISTER, userData),\n  getProfile: () => api.get(API_ENDPOINTS.ME),\n  // Data\n  getFaculties: () => api.get(API_ENDPOINTS.FACULTIES),\n  getCourses: () => api.get(API_ENDPOINTS.COURSES),\n  getClasses: () => api.get(API_ENDPOINTS.CLASSES),\n  getMyClasses: () => api.get(API_ENDPOINTS.MY_CLASSES),\n  getLecturers: () => api.get(API_ENDPOINTS.LECTURERS),\n  // Reports\n  getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS, params),\n  getReportStats: () => api.get(API_ENDPOINTS.REPORTS_STATS),\n  getReportById: id => api.get(API_ENDPOINTS.REPORTS_BY_ID(id)),\n  createReport: data => api.post(API_ENDPOINTS.REPORTS, data),\n  // Feedback endpoints - FIXED\n  submitFeedback: (reportId, feedback) => api.post(API_ENDPOINTS.REPORTS_FEEDBACK(reportId), {\n    feedback\n  }),\n  getMyReports: () => api.get(API_ENDPOINTS.MY_REPORTS),\n  // For lecturers to view their reports with feedback\n\n  // Ratings - ENHANCED with better error handling\n  getMyRatings: () => api.get(API_ENDPOINTS.RATINGS_MY),\n  getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS_LECTURER),\n  submitRating: ratingData => {\n    // Validate rating data before sending\n    const validatedData = {\n      lecturer_id: ratingData.lecturer_id,\n      course_id: ratingData.course_id,\n      class_id: ratingData.class_id,\n      rating: Number(ratingData.rating),\n      comment: ratingData.comment || ''\n      // Ensure we're only sending required fields\n    };\n    console.log('📊 Submitting rating:', validatedData);\n    return api.post(API_ENDPOINTS.RATINGS, validatedData);\n  },\n  // Student Monitoring\n  getStudentAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT_ATTENDANCE, params),\n  getStudentStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT_STATS, params),\n  getStudentPerformance: () => api.get(API_ENDPOINTS.STUDENT_PERFORMANCE),\n  // Analytics\n  getAnalyticsOverview: () => api.get(API_ENDPOINTS.ANALYTICS_OVERVIEW),\n  getAnalyticsTrends: () => api.get(API_ENDPOINTS.ANALYTICS_TRENDS),\n  // User Management\n  getUsers: () => api.get(API_ENDPOINTS.USERS),\n  updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS_UPDATE_ROLE(id), {\n    role\n  }),\n  // Search\n  search: query => api.get(API_ENDPOINTS.SEARCH, {\n    q: query\n  }),\n  // System\n  healthCheck: () => api.get(API_ENDPOINTS.HEALTH),\n  testConnection: () => api.get(API_ENDPOINTS.TEST)\n};\n\n// Enhanced backend connection test with detailed diagnostics\nexport const testBackendConnection = async () => {\n  console.group('🔍 Backend Connection Diagnostics');\n  try {\n    console.log('📡 Testing connection to:', API_BASE_URL);\n    const startTime = Date.now();\n    const testResponse = await apiMethods.testConnection();\n    const endTime = Date.now();\n    console.log('✅ Backend connection successful:', {\n      responseTime: `${endTime - startTime}ms`,\n      status: testResponse.status,\n      data: testResponse.data\n    });\n    return {\n      connected: true,\n      responseTime: endTime - startTime,\n      status: testResponse.status,\n      message: 'Backend is responding correctly'\n    };\n  } catch (error) {\n    console.error('❌ Backend connection failed:', {\n      message: error.message,\n      status: error.status,\n      isTimeout: error.isTimeout,\n      isNetworkError: error.isNetworkError,\n      isCorsError: error.isCorsError\n    });\n    return {\n      connected: false,\n      message: error.message,\n      isTimeout: error.isTimeout,\n      isNetworkError: error.isNetworkError,\n      isCorsError: error.isCorsError,\n      status: error.status\n    };\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Connection status monitor\nlet connectionStatus = 'unknown';\nexport const getConnectionStatus = () => connectionStatus;\n\n// Initialize connection test with retry\nexport const initializeApp = async () => {\n  console.log('🚀 Initializing application...');\n\n  // Wait a bit for backend to wake up (if it's sleeping)\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  const result = await testBackendConnection();\n  connectionStatus = result.connected ? 'connected' : 'disconnected';\n  if (!result.connected) {\n    console.warn('⚠️ Application starting in limited mode. Some features may not work.');\n\n    // Show user-friendly warning\n    if (typeof window !== 'undefined' && result.isCorsError) {\n      setTimeout(() => {\n        const alertDiv = document.createElement('div');\n        alertDiv.className = 'alert alert-warning alert-dismissible fade show';\n        alertDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;';\n        alertDiv.innerHTML = `\n          <strong>⚠️ CORS Configuration Issue</strong>\n          <p class=\"mb-1\">Backend is not accepting requests from this origin. Please check backend CORS settings.</p>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n        `;\n        document.body.appendChild(alertDiv);\n      }, 1000);\n    }\n  }\n  return result;\n};\n\n// Export connection utilities\nexport const connectionUtils = {\n  testBackendConnection,\n  getConnectionStatus,\n  initializeApp\n};\n\n// Auto-initialize (but don't block app startup)\nsetTimeout(() => {\n  initializeApp();\n}, 1000);\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","API_ENDPOINTS","REGISTER","LOGIN","ME","FACULTIES","COURSES","CLASSES","MY_CLASSES","LECTURERS","REPORTS","REPORTS_STATS","REPORTS_BY_ID","id","REPORTS_FEEDBACK","MY_REPORTS","RATINGS","RATINGS_MY","RATINGS_LECTURER","SEARCH","STUDENT_ATTENDANCE","STUDENT_STATS","STUDENT_PERFORMANCE","ANALYTICS_OVERVIEW","ANALYTICS_TRENDS","USERS","USERS_UPDATE_ROLE","HEALTH","TEST","getAuthToken","localStorage","getItem","apiInstance","create","baseURL","timeout","interceptors","request","use","config","_config$method","token","headers","Authorization","metadata","startTime","Date","console","log","method","toUpperCase","url","data","params","error","Promise","reject","response","_response$config$meth","endTime","duration","status","_error$config","_error$config$method","_error$config2","_error$response","_error$response2","_error$response3","message","code","responseData","warn","removeItem","setTimeout","window","location","href","apiCall","endpoint","options","retries","maxRetries","_config$method2","contentType","includes","Error","_options$method","_error$response4","_error$response5","_error$response6","_error$response6$data","_error$response7","_error$response8","_error$response9","_error$response9$stat","_error$response0","_error$response1","_error$response10","_error$response11","_error$response12","_error$response13","isTimeout","isNetworkError","isCorsError","retriesLeft","errorMessage","errors","Object","values","flat","join","toString","startsWith","delay","Math","pow","resolve","success","api","get","post","put","delete","apiMethods","login","credentials","register","userData","getProfile","getFaculties","getCourses","getClasses","getMyClasses","getLecturers","getReports","getReportStats","getReportById","createReport","submitFeedback","reportId","feedback","getMyReports","getMyRatings","getLecturerRatings","submitRating","ratingData","validatedData","lecturer_id","course_id","class_id","rating","Number","comment","getStudentAttendance","getStudentStats","getStudentPerformance","getAnalyticsOverview","getAnalyticsTrends","getUsers","updateUserRole","role","search","query","q","healthCheck","testConnection","testBackendConnection","group","now","testResponse","responseTime","connected","groupEnd","connectionStatus","getConnectionStatus","initializeApp","result","alertDiv","document","createElement","className","style","cssText","innerHTML","body","appendChild","connectionUtils"],"sources":["C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base API URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"https://luct-7.onrender.com\";\r\n\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  REGISTER: `${API_BASE_URL}/api/auth/register`,\r\n  LOGIN: `${API_BASE_URL}/api/auth/login`,\r\n  ME: `${API_BASE_URL}/api/auth/me`,\r\n\r\n  // Data\r\n  FACULTIES: `${API_BASE_URL}/api/faculties`,\r\n  COURSES: `${API_BASE_URL}/api/courses`,\r\n  CLASSES: `${API_BASE_URL}/api/classes`,\r\n  MY_CLASSES: `${API_BASE_URL}/api/my-classes`,\r\n  LECTURERS: `${API_BASE_URL}/api/lecturers`,\r\n\r\n  // Reports\r\n  REPORTS: `${API_BASE_URL}/api/reports`,\r\n  REPORTS_STATS: `${API_BASE_URL}/api/reports/stats`,\r\n  REPORTS_BY_ID: (id) => `${API_BASE_URL}/api/reports/${id}`,\r\n  REPORTS_FEEDBACK: (id) => `${API_BASE_URL}/api/reports/${id}/feedback`,\r\n  MY_REPORTS: `${API_BASE_URL}/api/reports/my-reports`, // Added for lecturer feedback\r\n\r\n  // Ratings\r\n  RATINGS: `${API_BASE_URL}/api/ratings`,\r\n  RATINGS_MY: `${API_BASE_URL}/api/ratings/my-ratings`,\r\n  RATINGS_LECTURER: `${API_BASE_URL}/api/ratings/lecturer`,\r\n\r\n  // Search\r\n  SEARCH: `${API_BASE_URL}/api/search`,\r\n\r\n  // Student\r\n  STUDENT_ATTENDANCE: `${API_BASE_URL}/api/students/attendance`,\r\n  STUDENT_STATS: `${API_BASE_URL}/api/students/stats`,\r\n  STUDENT_PERFORMANCE: `${API_BASE_URL}/api/students/performance`,\r\n\r\n  // Analytics\r\n  ANALYTICS_OVERVIEW: `${API_BASE_URL}/api/analytics/overview`,\r\n  ANALYTICS_TRENDS: `${API_BASE_URL}/api/analytics/trends`,\r\n\r\n  // User Management\r\n  USERS: `${API_BASE_URL}/api/users`,\r\n  USERS_UPDATE_ROLE: (id) => `${API_BASE_URL}/api/users/${id}/role`,\r\n\r\n  // Health\r\n  HEALTH: `${API_BASE_URL}/api/health`,\r\n  TEST: `${API_BASE_URL}/api/test`,\r\n};\r\n\r\n// Get token from localStorage\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\n// Enhanced API instance with interceptors\r\nconst apiInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 15000, // Increased to 15 seconds\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getAuthToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n    \r\n    // Add timestamp for debugging\r\n    config.metadata = { startTime: new Date() };\r\n    \r\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data || config.params);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ Request interceptor error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiInstance.interceptors.response.use(\r\n  (response) => {\r\n    const endTime = new Date();\r\n    const duration = endTime - response.config.metadata.startTime;\r\n    \r\n    console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`, {\r\n      status: response.status,\r\n      duration: `${duration}ms`,\r\n      data: response.data\r\n    });\r\n    \r\n    return response;\r\n  },\r\n  (error) => {\r\n    const endTime = new Date();\r\n    const duration = error.config ? endTime - error.config.metadata.startTime : 'N/A';\r\n    \r\n    console.error(`💥 API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url}`, {\r\n      status: error.response?.status,\r\n      duration: `${duration}ms`,\r\n      error: error.message,\r\n      code: error.code,\r\n      responseData: error.response?.data // Log response data for debugging\r\n    });\r\n\r\n    if (error.response?.status === 401) {\r\n      console.warn(\"🔐 Authentication failed - redirecting to login\");\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      setTimeout(() => {\r\n        window.location.href = \"/login\";\r\n      }, 100);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Enhanced API call wrapper with better error handling and retry logic\r\nexport const apiCall = async (endpoint, options = {}, retries = 2) => {\r\n  const maxRetries = retries;\r\n  \r\n  try {\r\n    const config = {\r\n      url: endpoint,\r\n      ...options,\r\n    };\r\n\r\n    console.log(`🔄 API Call attempt: ${config.method?.toUpperCase() || 'GET'} ${endpoint} (${maxRetries - retries + 1}/${maxRetries + 1})`);\r\n\r\n    const response = await apiInstance(config);\r\n    \r\n    // Handle HTML error responses (when backend returns HTML instead of JSON)\r\n    const contentType = response.headers['content-type'];\r\n    if (contentType && contentType.includes('text/html')) {\r\n      throw new Error(`Server returned HTML error page (Status: ${response.status})`);\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    const isTimeout = error.code === 'ECONNABORTED' || error.message.includes('timeout');\r\n    const isNetworkError = error.message.includes('Network Error') || !error.response;\r\n    const isCorsError = error.message.includes('CORS') || error.message.includes('Access-Control');\r\n    \r\n    console.error(`❌ API Call failed: ${options.method?.toUpperCase() || 'GET'} ${endpoint}`, {\r\n      error: error.message,\r\n      code: error.code,\r\n      status: error.response?.status,\r\n      responseData: error.response?.data, // Added for debugging 400 errors\r\n      isTimeout,\r\n      isNetworkError,\r\n      isCorsError,\r\n      retriesLeft: retries\r\n    });\r\n\r\n    // Enhanced error message extraction for 400 errors\r\n    let errorMessage = error.response?.data?.message || error.message || \"API request failed\";\r\n    \r\n    // Extract validation errors from backend response\r\n    if (error.response?.status === 400 && error.response?.data) {\r\n      if (typeof error.response.data === 'string') {\r\n        errorMessage = error.response.data;\r\n      } else if (error.response.data.errors) {\r\n        // Handle validation errors array\r\n        errorMessage = Object.values(error.response.data.errors).flat().join(', ');\r\n      } else if (error.response.data.error) {\r\n        errorMessage = error.response.data.error;\r\n      }\r\n    }\r\n\r\n    // Retry logic for timeout and network errors (but not for 4xx errors)\r\n    if ((isTimeout || isNetworkError) && retries > 0 && !error.response?.status?.toString().startsWith('4')) {\r\n      const delay = Math.pow(2, maxRetries - retries) * 1000; // Exponential backoff\r\n      console.log(`⏳ Retrying in ${delay}ms... (${retries} retries left)`);\r\n      \r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n      return apiCall(endpoint, options, retries - 1);\r\n    }\r\n    \r\n    // Enhanced error handling\r\n    if (error.response?.status === 401) {\r\n      // Already handled in interceptor\r\n    }\r\n    \r\n    // Enhanced error messages for specific cases\r\n    if (isCorsError) {\r\n      errorMessage = \"CORS error: Backend is not configured to accept requests from this origin. Please check backend CORS settings.\";\r\n    } else if (isTimeout) {\r\n      errorMessage = \"Backend server is not responding. Please check if the server is running.\";\r\n    } else if (isNetworkError) {\r\n      errorMessage = \"Network connection failed. Please check your internet connection.\";\r\n    } else if (error.response?.status === 400) {\r\n      errorMessage = `Bad Request: ${errorMessage}`;\r\n    } else if (error.response?.status === 404) {\r\n      errorMessage = \"Endpoint not found. The requested resource does not exist.\";\r\n    } else if (error.response?.status === 500) {\r\n      errorMessage = \"Server error. Please try again later.\";\r\n    }\r\n    \r\n    throw {\r\n      success: false,\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      code: error.code,\r\n      data: error.response?.data,\r\n      isTimeout,\r\n      isNetworkError,\r\n      isCorsError\r\n    };\r\n  }\r\n};\r\n\r\n// Enhanced API methods with proper response handling\r\nexport const api = {\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"GET\",\r\n        params \r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Request successful\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"POST\", \r\n        data \r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Created successfully\",\r\n        status: 201\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"PUT\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Updated successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"DELETE\" \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Deleted successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n// Convenience methods for specific endpoints\r\nexport const apiMethods = {\r\n  // Auth\r\n  login: (credentials) => api.post(API_ENDPOINTS.LOGIN, credentials),\r\n  register: (userData) => api.post(API_ENDPOINTS.REGISTER, userData),\r\n  getProfile: () => api.get(API_ENDPOINTS.ME),\r\n  \r\n  // Data\r\n  getFaculties: () => api.get(API_ENDPOINTS.FACULTIES),\r\n  getCourses: () => api.get(API_ENDPOINTS.COURSES),\r\n  getClasses: () => api.get(API_ENDPOINTS.CLASSES),\r\n  getMyClasses: () => api.get(API_ENDPOINTS.MY_CLASSES),\r\n  getLecturers: () => api.get(API_ENDPOINTS.LECTURERS),\r\n  \r\n  // Reports\r\n  getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS, params),\r\n  getReportStats: () => api.get(API_ENDPOINTS.REPORTS_STATS),\r\n  getReportById: (id) => api.get(API_ENDPOINTS.REPORTS_BY_ID(id)),\r\n  createReport: (data) => api.post(API_ENDPOINTS.REPORTS, data),\r\n  \r\n  // Feedback endpoints - FIXED\r\n  submitFeedback: (reportId, feedback) => api.post(API_ENDPOINTS.REPORTS_FEEDBACK(reportId), { feedback }),\r\n  getMyReports: () => api.get(API_ENDPOINTS.MY_REPORTS), // For lecturers to view their reports with feedback\r\n  \r\n  // Ratings - ENHANCED with better error handling\r\n  getMyRatings: () => api.get(API_ENDPOINTS.RATINGS_MY),\r\n  getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS_LECTURER),\r\n  submitRating: (ratingData) => {\r\n    // Validate rating data before sending\r\n    const validatedData = {\r\n      lecturer_id: ratingData.lecturer_id,\r\n      course_id: ratingData.course_id,\r\n      class_id: ratingData.class_id,\r\n      rating: Number(ratingData.rating),\r\n      comment: ratingData.comment || '',\r\n      // Ensure we're only sending required fields\r\n    };\r\n    \r\n    console.log('📊 Submitting rating:', validatedData);\r\n    return api.post(API_ENDPOINTS.RATINGS, validatedData);\r\n  },\r\n  \r\n  // Student Monitoring\r\n  getStudentAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT_ATTENDANCE, params),\r\n  getStudentStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT_STATS, params),\r\n  getStudentPerformance: () => api.get(API_ENDPOINTS.STUDENT_PERFORMANCE),\r\n  \r\n  // Analytics\r\n  getAnalyticsOverview: () => api.get(API_ENDPOINTS.ANALYTICS_OVERVIEW),\r\n  getAnalyticsTrends: () => api.get(API_ENDPOINTS.ANALYTICS_TRENDS),\r\n  \r\n  // User Management\r\n  getUsers: () => api.get(API_ENDPOINTS.USERS),\r\n  updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS_UPDATE_ROLE(id), { role }),\r\n  \r\n  // Search\r\n  search: (query) => api.get(API_ENDPOINTS.SEARCH, { q: query }),\r\n  \r\n  // System\r\n  healthCheck: () => api.get(API_ENDPOINTS.HEALTH),\r\n  testConnection: () => api.get(API_ENDPOINTS.TEST),\r\n};\r\n\r\n// Enhanced backend connection test with detailed diagnostics\r\nexport const testBackendConnection = async () => {\r\n  console.group('🔍 Backend Connection Diagnostics');\r\n  \r\n  try {\r\n    console.log('📡 Testing connection to:', API_BASE_URL);\r\n    \r\n    const startTime = Date.now();\r\n    const testResponse = await apiMethods.testConnection();\r\n    const endTime = Date.now();\r\n    \r\n    console.log('✅ Backend connection successful:', {\r\n      responseTime: `${endTime - startTime}ms`,\r\n      status: testResponse.status,\r\n      data: testResponse.data\r\n    });\r\n    \r\n    return {\r\n      connected: true,\r\n      responseTime: endTime - startTime,\r\n      status: testResponse.status,\r\n      message: 'Backend is responding correctly'\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ Backend connection failed:', {\r\n      message: error.message,\r\n      status: error.status,\r\n      isTimeout: error.isTimeout,\r\n      isNetworkError: error.isNetworkError,\r\n      isCorsError: error.isCorsError\r\n    });\r\n    \r\n    return {\r\n      connected: false,\r\n      message: error.message,\r\n      isTimeout: error.isTimeout,\r\n      isNetworkError: error.isNetworkError,\r\n      isCorsError: error.isCorsError,\r\n      status: error.status\r\n    };\r\n  } finally {\r\n    console.groupEnd();\r\n  }\r\n};\r\n\r\n// Connection status monitor\r\nlet connectionStatus = 'unknown';\r\nexport const getConnectionStatus = () => connectionStatus;\r\n\r\n// Initialize connection test with retry\r\nexport const initializeApp = async () => {\r\n  console.log('🚀 Initializing application...');\r\n  \r\n  // Wait a bit for backend to wake up (if it's sleeping)\r\n  await new Promise(resolve => setTimeout(resolve, 2000));\r\n  \r\n  const result = await testBackendConnection();\r\n  connectionStatus = result.connected ? 'connected' : 'disconnected';\r\n  \r\n  if (!result.connected) {\r\n    console.warn('⚠️ Application starting in limited mode. Some features may not work.');\r\n    \r\n    // Show user-friendly warning\r\n    if (typeof window !== 'undefined' && result.isCorsError) {\r\n      setTimeout(() => {\r\n        const alertDiv = document.createElement('div');\r\n        alertDiv.className = 'alert alert-warning alert-dismissible fade show';\r\n        alertDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;';\r\n        alertDiv.innerHTML = `\r\n          <strong>⚠️ CORS Configuration Issue</strong>\r\n          <p class=\"mb-1\">Backend is not accepting requests from this origin. Please check backend CORS settings.</p>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n        `;\r\n        document.body.appendChild(alertDiv);\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n// Export connection utilities\r\nexport const connectionUtils = {\r\n  testBackendConnection,\r\n  getConnectionStatus,\r\n  initializeApp\r\n};\r\n\r\n// Auto-initialize (but don't block app startup)\r\nsetTimeout(() => {\r\n  initializeApp();\r\n}, 1000);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}