{"ast":null,"code":"import*as XLSX from'xlsx';import{saveAs}from'file-saver';export const exportToExcel=function(data){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'export';let sheetName=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'Data';try{// Create workbook and worksheet\nconst workbook=XLSX.utils.book_new();const worksheet=XLSX.utils.json_to_sheet(data);// Add worksheet to workbook\nXLSX.utils.book_append_sheet(workbook,worksheet,sheetName);// Generate Excel file and save\nconst excelBuffer=XLSX.write(workbook,{bookType:'xlsx',type:'array'});const dataBlob=new Blob([excelBuffer],{type:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'});saveAs(dataBlob,\"\".concat(filename,\"_\").concat(new Date().toISOString().split('T')[0],\".xlsx\"));return true;}catch(error){console.error('Excel export error:',error);return false;}};// Specific export functions for different data types\nexport const exportReportsToExcel=reports=>{const exportData=reports.map(report=>({'Report ID':report.id,'Course Code':report.course_code,'Course Name':report.course_name,'Lecturer':report.lecturer_name,'Week':report.week_of_reporting,'Lecture Date':new Date(report.lecture_date).toLocaleDateString(),'Students Present':report.actual_present,'Total Registered':report.total_registered,'Attendance Rate':\"\".concat(Math.round(report.actual_present/report.total_registered*100),\"%\"),'Venue':report.venue||'N/A','Topic':report.topic||'N/A','Learning Outcomes':report.learning_outcomes||'N/A','Recommendations':report.recommendations||'N/A','Feedback':report.feedback||'N/A','Created At':new Date(report.created_at).toLocaleString()}));return exportToExcel(exportData,'lecture_reports','Reports');};export const exportCoursesToExcel=courses=>{const exportData=courses.map(course=>({'Course Code':course.code,'Course Name':course.course_name,'Faculty':course.faculty_name,'Total Registered':course.total_registered,'Total Reports':course.report_count||0,'Average Attendance':course.avg_attendance?\"\".concat(Math.round(course.avg_attendance),\"%\"):'N/A'}));return exportToExcel(exportData,'courses','Courses');};export const exportStudentAttendanceToExcel=function(attendance){let studentName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';const exportData=attendance.map(record=>({'Date':new Date(record.lecture_date).toLocaleDateString(),'Course Code':record.course_code,'Course Name':record.course_name,'Lecturer':record.lecturer_name,'Class':record.class_name,'Week':record.week_of_reporting,'Topic':record.topic||'N/A','Status':record.actual_present>0?'Present':'Absent','Students Present':record.actual_present,'Total Registered':record.total_registered,'Attendance Rate':\"\".concat(Math.round(record.actual_present/record.total_registered*100),\"%\")}));const filename=studentName?\"attendance_\".concat(studentName):'attendance';return exportToExcel(exportData,filename,'Attendance');};export const exportAnalyticsToExcel=analyticsData=>{const exportData=[{'Metric':'Total Users','Value':analyticsData.total_users||0},{'Metric':'Total Students','Value':analyticsData.total_students||0},{'Metric':'Total Lecturers','Value':analyticsData.total_lecturers||0},{'Metric':'Total Courses','Value':analyticsData.total_courses||0},{'Metric':'Total Reports','Value':analyticsData.total_reports||0},{'Metric':'Average Attendance Rate','Value':analyticsData.avg_attendance_rate?\"\".concat(analyticsData.avg_attendance_rate,\"%\"):'0%'},{'Metric':'Average Rating','Value':analyticsData.avg_rating||0}];return exportToExcel(exportData,'analytics_report','Analytics');};export const exportRatingsToExcel=function(ratings){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'ratings';const exportData=ratings.map(rating=>({'Rated Item':rating.lecturer_name||rating.course_name,'Type':rating.rating_type,'Rating':rating.rating,'Comment':rating.comment||'N/A','Rated By':rating.student_name||'N/A','Date':new Date(rating.created_at).toLocaleDateString()}));return exportToExcel(exportData,\"\".concat(type,\"_ratings\"),'Ratings');};","map":{"version":3,"names":["XLSX","saveAs","exportToExcel","data","filename","arguments","length","undefined","sheetName","workbook","utils","book_new","worksheet","json_to_sheet","book_append_sheet","excelBuffer","write","bookType","type","dataBlob","Blob","concat","Date","toISOString","split","error","console","exportReportsToExcel","reports","exportData","map","report","id","course_code","course_name","lecturer_name","week_of_reporting","lecture_date","toLocaleDateString","actual_present","total_registered","Math","round","venue","topic","learning_outcomes","recommendations","feedback","created_at","toLocaleString","exportCoursesToExcel","courses","course","code","faculty_name","report_count","avg_attendance","exportStudentAttendanceToExcel","attendance","studentName","record","class_name","exportAnalyticsToExcel","analyticsData","total_users","total_students","total_lecturers","total_courses","total_reports","avg_attendance_rate","avg_rating","exportRatingsToExcel","ratings","rating","rating_type","comment","student_name"],"sources":["C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/src/utils/excelExport.js"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport const exportToExcel = (data, filename = 'export', sheetName = 'Data') => {\r\n  try {\r\n    // Create workbook and worksheet\r\n    const workbook = XLSX.utils.book_new();\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    \r\n    // Add worksheet to workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\r\n    \r\n    // Generate Excel file and save\r\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    const dataBlob = new Blob([excelBuffer], { \r\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n    });\r\n    \r\n    saveAs(dataBlob, `${filename}_${new Date().toISOString().split('T')[0]}.xlsx`);\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('Excel export error:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Specific export functions for different data types\r\nexport const exportReportsToExcel = (reports) => {\r\n  const exportData = reports.map(report => ({\r\n    'Report ID': report.id,\r\n    'Course Code': report.course_code,\r\n    'Course Name': report.course_name,\r\n    'Lecturer': report.lecturer_name,\r\n    'Week': report.week_of_reporting,\r\n    'Lecture Date': new Date(report.lecture_date).toLocaleDateString(),\r\n    'Students Present': report.actual_present,\r\n    'Total Registered': report.total_registered,\r\n    'Attendance Rate': `${Math.round((report.actual_present / report.total_registered) * 100)}%`,\r\n    'Venue': report.venue || 'N/A',\r\n    'Topic': report.topic || 'N/A',\r\n    'Learning Outcomes': report.learning_outcomes || 'N/A',\r\n    'Recommendations': report.recommendations || 'N/A',\r\n    'Feedback': report.feedback || 'N/A',\r\n    'Created At': new Date(report.created_at).toLocaleString()\r\n  }));\r\n\r\n  return exportToExcel(exportData, 'lecture_reports', 'Reports');\r\n};\r\n\r\nexport const exportCoursesToExcel = (courses) => {\r\n  const exportData = courses.map(course => ({\r\n    'Course Code': course.code,\r\n    'Course Name': course.course_name,\r\n    'Faculty': course.faculty_name,\r\n    'Total Registered': course.total_registered,\r\n    'Total Reports': course.report_count || 0,\r\n    'Average Attendance': course.avg_attendance ? `${Math.round(course.avg_attendance)}%` : 'N/A'\r\n  }));\r\n\r\n  return exportToExcel(exportData, 'courses', 'Courses');\r\n};\r\n\r\nexport const exportStudentAttendanceToExcel = (attendance, studentName = '') => {\r\n  const exportData = attendance.map(record => ({\r\n    'Date': new Date(record.lecture_date).toLocaleDateString(),\r\n    'Course Code': record.course_code,\r\n    'Course Name': record.course_name,\r\n    'Lecturer': record.lecturer_name,\r\n    'Class': record.class_name,\r\n    'Week': record.week_of_reporting,\r\n    'Topic': record.topic || 'N/A',\r\n    'Status': record.actual_present > 0 ? 'Present' : 'Absent',\r\n    'Students Present': record.actual_present,\r\n    'Total Registered': record.total_registered,\r\n    'Attendance Rate': `${Math.round((record.actual_present / record.total_registered) * 100)}%`\r\n  }));\r\n\r\n  const filename = studentName ? `attendance_${studentName}` : 'attendance';\r\n  return exportToExcel(exportData, filename, 'Attendance');\r\n};\r\n\r\nexport const exportAnalyticsToExcel = (analyticsData) => {\r\n  const exportData = [\r\n    {\r\n      'Metric': 'Total Users',\r\n      'Value': analyticsData.total_users || 0\r\n    },\r\n    {\r\n      'Metric': 'Total Students',\r\n      'Value': analyticsData.total_students || 0\r\n    },\r\n    {\r\n      'Metric': 'Total Lecturers',\r\n      'Value': analyticsData.total_lecturers || 0\r\n    },\r\n    {\r\n      'Metric': 'Total Courses',\r\n      'Value': analyticsData.total_courses || 0\r\n    },\r\n    {\r\n      'Metric': 'Total Reports',\r\n      'Value': analyticsData.total_reports || 0\r\n    },\r\n    {\r\n      'Metric': 'Average Attendance Rate',\r\n      'Value': analyticsData.avg_attendance_rate ? `${analyticsData.avg_attendance_rate}%` : '0%'\r\n    },\r\n    {\r\n      'Metric': 'Average Rating',\r\n      'Value': analyticsData.avg_rating || 0\r\n    }\r\n  ];\r\n\r\n  return exportToExcel(exportData, 'analytics_report', 'Analytics');\r\n};\r\n\r\nexport const exportRatingsToExcel = (ratings, type = 'ratings') => {\r\n  const exportData = ratings.map(rating => ({\r\n    'Rated Item': rating.lecturer_name || rating.course_name,\r\n    'Type': rating.rating_type,\r\n    'Rating': rating.rating,\r\n    'Comment': rating.comment || 'N/A',\r\n    'Rated By': rating.student_name || 'N/A',\r\n    'Date': new Date(rating.created_at).toLocaleDateString()\r\n  }));\r\n\r\n  return exportToExcel(exportData, `${type}_ratings`, 'Ratings');\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}