{"ast":null,"code":"import axios from \"axios\";\n\n// Base API URL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"https://luct-7.onrender.com\";\nexport const API_ENDPOINTS = {\n  // Auth\n  REGISTER: `${API_BASE_URL}/api/auth/register`,\n  LOGIN: `${API_BASE_URL}/api/auth/login`,\n  ME: `${API_BASE_URL}/api/auth/me`,\n  // Data\n  FACULTIES: `${API_BASE_URL}/api/faculties`,\n  COURSES: `${API_BASE_URL}/api/courses`,\n  CLASSES: `${API_BASE_URL}/api/classes`,\n  MY_CLASSES: `${API_BASE_URL}/api/my-classes`,\n  LECTURERS: `${API_BASE_URL}/api/lecturers`,\n  // Reports\n  REPORTS: `${API_BASE_URL}/api/reports`,\n  REPORTS_STATS: `${API_BASE_URL}/api/reports/stats`,\n  REPORTS_BY_ID: id => `${API_BASE_URL}/api/reports/${id}`,\n  REPORTS_FEEDBACK: id => `${API_BASE_URL}/api/reports/${id}/feedback`,\n  // Ratings\n  RATINGS: `${API_BASE_URL}/api/ratings`,\n  RATINGS_MY: `${API_BASE_URL}/api/ratings/my-ratings`,\n  RATINGS_LECTURER: `${API_BASE_URL}/api/ratings/lecturer`,\n  // Search\n  SEARCH: `${API_BASE_URL}/api/search`,\n  // Student\n  STUDENT_ATTENDANCE: `${API_BASE_URL}/api/students/attendance`,\n  STUDENT_STATS: `${API_BASE_URL}/api/students/stats`,\n  STUDENT_PERFORMANCE: `${API_BASE_URL}/api/students/performance`,\n  // Analytics\n  ANALYTICS_OVERVIEW: `${API_BASE_URL}/api/analytics/overview`,\n  ANALYTICS_TRENDS: `${API_BASE_URL}/api/analytics/trends`,\n  // User Management\n  USERS: `${API_BASE_URL}/api/users`,\n  USERS_UPDATE_ROLE: id => `${API_BASE_URL}/api/users/${id}/role`,\n  // Health\n  HEALTH: `${API_BASE_URL}/api/health`,\n  TEST: `${API_BASE_URL}/api/test`\n};\n\n// Get token from localStorage\nexport const getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n};\n\n// Enhanced API instance with interceptors\nconst apiInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000 // Reduced to 10 seconds for faster feedback\n});\n\n// Request interceptor to add auth token\napiInstance.interceptors.request.use(config => {\n  var _config$method;\n  const token = getAuthToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  config.headers[\"Content-Type\"] = \"application/json\";\n\n  // Add timestamp for debugging\n  config.metadata = {\n    startTime: new Date()\n  };\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error(\"❌ Request interceptor error:\", error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiInstance.interceptors.response.use(response => {\n  var _response$config$meth;\n  const endTime = new Date();\n  const duration = endTime - response.config.metadata.startTime;\n  console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, {\n    status: response.status,\n    duration: `${duration}ms`\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config$method, _error$config2, _error$response, _error$response2;\n  const endTime = new Date();\n  const duration = error.config ? endTime - error.config.metadata.startTime : 'N/A';\n  console.error(`💥 API Error: ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()} ${(_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url}`, {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    duration: `${duration}ms`,\n    error: error.message,\n    code: error.code\n  });\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    console.warn(\"🔐 Authentication failed - redirecting to login\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setTimeout(() => {\n      window.location.href = \"/login\";\n    }, 100);\n  }\n  return Promise.reject(error);\n});\n\n// Enhanced API call wrapper with better error handling and retry logic\nexport const apiCall = async (endpoint, options = {}, retries = 2) => {\n  const maxRetries = retries;\n  try {\n    var _config$method2;\n    const config = {\n      url: endpoint,\n      ...options\n    };\n    console.log(`🔄 API Call attempt: ${((_config$method2 = config.method) === null || _config$method2 === void 0 ? void 0 : _config$method2.toUpperCase()) || 'GET'} ${endpoint} (${maxRetries - retries + 1}/${maxRetries + 1})`);\n    const response = await apiInstance(config);\n\n    // Handle HTML error responses (when backend returns HTML instead of JSON)\n    const contentType = response.headers['content-type'];\n    if (contentType && contentType.includes('text/html')) {\n      throw new Error(`Server returned HTML error page (Status: ${response.status})`);\n    }\n\n    // Handle backend response format\n    if (response.data && response.data.success === false) {\n      const error = new Error(response.data.message || \"Request failed\");\n      error.response = response;\n      throw error;\n    }\n    return response.data;\n  } catch (error) {\n    var _options$method, _error$response3, _error$response4, _error$response4$stat, _error$response5, _error$response6, _error$response7, _error$response8, _error$response0, _error$response1;\n    const isTimeout = error.code === 'ECONNABORTED' || error.message.includes('timeout');\n    const isNetworkError = error.message.includes('Network Error') || !error.response;\n    const isCorsError = error.message.includes('CORS') || error.message.includes('Access-Control');\n    console.error(`❌ API Call failed: ${((_options$method = options.method) === null || _options$method === void 0 ? void 0 : _options$method.toUpperCase()) || 'GET'} ${endpoint}`, {\n      error: error.message,\n      code: error.code,\n      status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n      isTimeout,\n      isNetworkError,\n      isCorsError,\n      retriesLeft: retries\n    });\n\n    // Retry logic for timeout and network errors (but not for 4xx errors)\n    if ((isTimeout || isNetworkError) && retries > 0 && !((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$stat = _error$response4.status) !== null && _error$response4$stat !== void 0 && _error$response4$stat.toString().startsWith('4'))) {\n      const delay = Math.pow(2, maxRetries - retries) * 1000; // Exponential backoff\n      console.log(`⏳ Retrying in ${delay}ms... (${retries} retries left)`);\n      await new Promise(resolve => setTimeout(resolve, delay));\n      return apiCall(endpoint, options, retries - 1);\n    }\n\n    // Enhanced error handling\n    if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n      // Already handled in interceptor\n    }\n\n    // Return a consistent error format\n    let errorMessage;\n    if (isCorsError) {\n      errorMessage = \"CORS error: Backend is not configured to accept requests from this origin. Please check backend CORS settings.\";\n    } else if (isTimeout) {\n      errorMessage = \"Backend server is not responding. Please check if the server is running.\";\n    } else if (isNetworkError) {\n      errorMessage = \"Network connection failed. Please check your internet connection.\";\n    } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 400) {\n      errorMessage = \"Bad Request: Invalid data sent to server. Please check your input.\";\n    } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 404) {\n      errorMessage = \"Endpoint not found. The requested resource does not exist.\";\n    } else if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 500) {\n      errorMessage = \"Server error. Please try again later.\";\n    } else {\n      var _error$response9, _error$response9$data;\n      errorMessage = ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || error.message || \"API request failed\";\n    }\n    throw {\n      success: false,\n      message: errorMessage,\n      status: (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.status,\n      code: error.code,\n      data: (_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data,\n      isTimeout,\n      isNetworkError,\n      isCorsError\n    };\n  }\n};\n\n// Enhanced API methods with proper response handling\nexport const api = {\n  get: async (endpoint, params = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"GET\",\n        params\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Request successful\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  post: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"POST\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Created successfully\",\n        status: 201\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  put: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"PUT\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Updated successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  },\n  delete: async endpoint => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"DELETE\"\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Deleted successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status,\n        code: error.code,\n        isTimeout: error.isTimeout,\n        isNetworkError: error.isNetworkError,\n        isCorsError: error.isCorsError,\n        data: null\n      };\n    }\n  }\n};\n\n// Convenience methods for specific endpoints\nexport const apiMethods = {\n  // Auth\n  login: credentials => api.post(API_ENDPOINTS.LOGIN, credentials),\n  register: userData => api.post(API_ENDPOINTS.REGISTER, userData),\n  getProfile: () => api.get(API_ENDPOINTS.ME),\n  // Data\n  getFaculties: () => api.get(API_ENDPOINTS.FACULTIES),\n  getCourses: () => api.get(API_ENDPOINTS.COURSES),\n  getClasses: () => api.get(API_ENDPOINTS.CLASSES),\n  getMyClasses: () => api.get(API_ENDPOINTS.MY_CLASSES),\n  getLecturers: () => api.get(API_ENDPOINTS.LECTURERS),\n  // Reports\n  getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS, params),\n  getReportStats: () => api.get(API_ENDPOINTS.REPORTS_STATS),\n  getReportById: id => api.get(API_ENDPOINTS.REPORTS_BY_ID(id)),\n  createReport: data => api.post(API_ENDPOINTS.REPORTS, data),\n  submitFeedback: (id, feedback) => api.post(API_ENDPOINTS.REPORTS_FEEDBACK(id), {\n    feedback\n  }),\n  // Ratings\n  getMyRatings: () => api.get(API_ENDPOINTS.RATINGS_MY),\n  getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS_LECTURER),\n  submitRating: ratingData => api.post(API_ENDPOINTS.RATINGS, ratingData),\n  // Student Monitoring\n  getStudentAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT_ATTENDANCE, params),\n  getStudentStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT_STATS, params),\n  getStudentPerformance: () => api.get(API_ENDPOINTS.STUDENT_PERFORMANCE),\n  // Analytics\n  getAnalyticsOverview: () => api.get(API_ENDPOINTS.ANALYTICS_OVERVIEW),\n  getAnalyticsTrends: () => api.get(API_ENDPOINTS.ANALYTICS_TRENDS),\n  // User Management\n  getUsers: () => api.get(API_ENDPOINTS.USERS),\n  updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS_UPDATE_ROLE(id), {\n    role\n  }),\n  // Search\n  search: query => api.get(API_ENDPOINTS.SEARCH, {\n    q: query\n  }),\n  // System\n  healthCheck: () => api.get(API_ENDPOINTS.HEALTH),\n  testConnection: () => api.get(API_ENDPOINTS.TEST)\n};\n\n// Enhanced backend connection test with detailed diagnostics\nexport const testBackendConnection = async () => {\n  console.group('🔍 Backend Connection Diagnostics');\n  try {\n    console.log('📡 Testing connection to:', API_BASE_URL);\n    const startTime = Date.now();\n    const testResponse = await apiMethods.testConnection();\n    const endTime = Date.now();\n    console.log('✅ Backend connection successful:', {\n      responseTime: `${endTime - startTime}ms`,\n      status: testResponse.status,\n      data: testResponse.data\n    });\n    return {\n      connected: true,\n      responseTime: endTime - startTime,\n      status: testResponse.status,\n      message: 'Backend is responding correctly'\n    };\n  } catch (error) {\n    console.error('❌ Backend connection failed:', {\n      message: error.message,\n      status: error.status,\n      isTimeout: error.isTimeout,\n      isNetworkError: error.isNetworkError,\n      isCorsError: error.isCorsError\n    });\n    return {\n      connected: false,\n      message: error.message,\n      isTimeout: error.isTimeout,\n      isNetworkError: error.isNetworkError,\n      isCorsError: error.isCorsError,\n      status: error.status\n    };\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Connection status monitor\nlet connectionStatus = 'unknown';\nexport const getConnectionStatus = () => connectionStatus;\n\n// Initialize connection test with retry\nexport const initializeApp = async () => {\n  console.log('🚀 Initializing application...');\n\n  // Wait a bit for backend to wake up (if it's sleeping)\n  await new Promise(resolve => setTimeout(resolve, 2000));\n  const result = await testBackendConnection();\n  connectionStatus = result.connected ? 'connected' : 'disconnected';\n  if (!result.connected) {\n    console.warn('⚠️ Application starting in limited mode. Some features may not work.');\n\n    // Show user-friendly warning\n    if (typeof window !== 'undefined' && result.isCorsError) {\n      setTimeout(() => {\n        const alertDiv = document.createElement('div');\n        alertDiv.className = 'alert alert-warning alert-dismissible fade show';\n        alertDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;';\n        alertDiv.innerHTML = `\n          <strong>⚠️ CORS Configuration Issue</strong>\n          <p class=\"mb-1\">Backend is not accepting requests from this origin. Please check backend CORS settings.</p>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n        `;\n        document.body.appendChild(alertDiv);\n      }, 1000);\n    }\n  }\n  return result;\n};\n\n// Export connection utilities\nexport const connectionUtils = {\n  testBackendConnection,\n  getConnectionStatus,\n  initializeApp\n};\n\n// Auto-initialize (but don't block app startup)\nsetTimeout(() => {\n  initializeApp();\n}, 1000);\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","API_ENDPOINTS","REGISTER","LOGIN","ME","FACULTIES","COURSES","CLASSES","MY_CLASSES","LECTURERS","REPORTS","REPORTS_STATS","REPORTS_BY_ID","id","REPORTS_FEEDBACK","RATINGS","RATINGS_MY","RATINGS_LECTURER","SEARCH","STUDENT_ATTENDANCE","STUDENT_STATS","STUDENT_PERFORMANCE","ANALYTICS_OVERVIEW","ANALYTICS_TRENDS","USERS","USERS_UPDATE_ROLE","HEALTH","TEST","getAuthToken","localStorage","getItem","apiInstance","create","baseURL","timeout","interceptors","request","use","config","_config$method","token","headers","Authorization","metadata","startTime","Date","console","log","method","toUpperCase","url","error","Promise","reject","response","_response$config$meth","endTime","duration","status","_error$config","_error$config$method","_error$config2","_error$response","_error$response2","message","code","warn","removeItem","setTimeout","window","location","href","apiCall","endpoint","options","retries","maxRetries","_config$method2","contentType","includes","Error","data","success","_options$method","_error$response3","_error$response4","_error$response4$stat","_error$response5","_error$response6","_error$response7","_error$response8","_error$response0","_error$response1","isTimeout","isNetworkError","isCorsError","retriesLeft","toString","startsWith","delay","Math","pow","resolve","errorMessage","_error$response9","_error$response9$data","api","get","params","post","put","delete","apiMethods","login","credentials","register","userData","getProfile","getFaculties","getCourses","getClasses","getMyClasses","getLecturers","getReports","getReportStats","getReportById","createReport","submitFeedback","feedback","getMyRatings","getLecturerRatings","submitRating","ratingData","getStudentAttendance","getStudentStats","getStudentPerformance","getAnalyticsOverview","getAnalyticsTrends","getUsers","updateUserRole","role","search","query","q","healthCheck","testConnection","testBackendConnection","group","now","testResponse","responseTime","connected","groupEnd","connectionStatus","getConnectionStatus","initializeApp","result","alertDiv","document","createElement","className","style","cssText","innerHTML","body","appendChild","connectionUtils"],"sources":["C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base API URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"https://luct-7.onrender.com\";\r\n\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  REGISTER: `${API_BASE_URL}/api/auth/register`,\r\n  LOGIN: `${API_BASE_URL}/api/auth/login`,\r\n  ME: `${API_BASE_URL}/api/auth/me`,\r\n\r\n  // Data\r\n  FACULTIES: `${API_BASE_URL}/api/faculties`,\r\n  COURSES: `${API_BASE_URL}/api/courses`,\r\n  CLASSES: `${API_BASE_URL}/api/classes`,\r\n  MY_CLASSES: `${API_BASE_URL}/api/my-classes`,\r\n  LECTURERS: `${API_BASE_URL}/api/lecturers`,\r\n\r\n  // Reports\r\n  REPORTS: `${API_BASE_URL}/api/reports`,\r\n  REPORTS_STATS: `${API_BASE_URL}/api/reports/stats`,\r\n  REPORTS_BY_ID: (id) => `${API_BASE_URL}/api/reports/${id}`,\r\n  REPORTS_FEEDBACK: (id) => `${API_BASE_URL}/api/reports/${id}/feedback`,\r\n\r\n  // Ratings\r\n  RATINGS: `${API_BASE_URL}/api/ratings`,\r\n  RATINGS_MY: `${API_BASE_URL}/api/ratings/my-ratings`,\r\n  RATINGS_LECTURER: `${API_BASE_URL}/api/ratings/lecturer`,\r\n\r\n  // Search\r\n  SEARCH: `${API_BASE_URL}/api/search`,\r\n\r\n  // Student\r\n  STUDENT_ATTENDANCE: `${API_BASE_URL}/api/students/attendance`,\r\n  STUDENT_STATS: `${API_BASE_URL}/api/students/stats`,\r\n  STUDENT_PERFORMANCE: `${API_BASE_URL}/api/students/performance`,\r\n\r\n  // Analytics\r\n  ANALYTICS_OVERVIEW: `${API_BASE_URL}/api/analytics/overview`,\r\n  ANALYTICS_TRENDS: `${API_BASE_URL}/api/analytics/trends`,\r\n\r\n  // User Management\r\n  USERS: `${API_BASE_URL}/api/users`,\r\n  USERS_UPDATE_ROLE: (id) => `${API_BASE_URL}/api/users/${id}/role`,\r\n\r\n  // Health\r\n  HEALTH: `${API_BASE_URL}/api/health`,\r\n  TEST: `${API_BASE_URL}/api/test`,\r\n};\r\n\r\n// Get token from localStorage\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\n// Enhanced API instance with interceptors\r\nconst apiInstance = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000, // Reduced to 10 seconds for faster feedback\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = getAuthToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n    \r\n    // Add timestamp for debugging\r\n    config.metadata = { startTime: new Date() };\r\n    \r\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error(\"❌ Request interceptor error:\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napiInstance.interceptors.response.use(\r\n  (response) => {\r\n    const endTime = new Date();\r\n    const duration = endTime - response.config.metadata.startTime;\r\n    \r\n    console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`, {\r\n      status: response.status,\r\n      duration: `${duration}ms`\r\n    });\r\n    \r\n    return response;\r\n  },\r\n  (error) => {\r\n    const endTime = new Date();\r\n    const duration = error.config ? endTime - error.config.metadata.startTime : 'N/A';\r\n    \r\n    console.error(`💥 API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url}`, {\r\n      status: error.response?.status,\r\n      duration: `${duration}ms`,\r\n      error: error.message,\r\n      code: error.code\r\n    });\r\n\r\n    if (error.response?.status === 401) {\r\n      console.warn(\"🔐 Authentication failed - redirecting to login\");\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"user\");\r\n      setTimeout(() => {\r\n        window.location.href = \"/login\";\r\n      }, 100);\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Enhanced API call wrapper with better error handling and retry logic\r\nexport const apiCall = async (endpoint, options = {}, retries = 2) => {\r\n  const maxRetries = retries;\r\n  \r\n  try {\r\n    const config = {\r\n      url: endpoint,\r\n      ...options,\r\n    };\r\n\r\n    console.log(`🔄 API Call attempt: ${config.method?.toUpperCase() || 'GET'} ${endpoint} (${maxRetries - retries + 1}/${maxRetries + 1})`);\r\n\r\n    const response = await apiInstance(config);\r\n    \r\n    // Handle HTML error responses (when backend returns HTML instead of JSON)\r\n    const contentType = response.headers['content-type'];\r\n    if (contentType && contentType.includes('text/html')) {\r\n      throw new Error(`Server returned HTML error page (Status: ${response.status})`);\r\n    }\r\n    \r\n    // Handle backend response format\r\n    if (response.data && response.data.success === false) {\r\n      const error = new Error(response.data.message || \"Request failed\");\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    const isTimeout = error.code === 'ECONNABORTED' || error.message.includes('timeout');\r\n    const isNetworkError = error.message.includes('Network Error') || !error.response;\r\n    const isCorsError = error.message.includes('CORS') || error.message.includes('Access-Control');\r\n    \r\n    console.error(`❌ API Call failed: ${options.method?.toUpperCase() || 'GET'} ${endpoint}`, {\r\n      error: error.message,\r\n      code: error.code,\r\n      status: error.response?.status,\r\n      isTimeout,\r\n      isNetworkError,\r\n      isCorsError,\r\n      retriesLeft: retries\r\n    });\r\n\r\n    // Retry logic for timeout and network errors (but not for 4xx errors)\r\n    if ((isTimeout || isNetworkError) && retries > 0 && !error.response?.status?.toString().startsWith('4')) {\r\n      const delay = Math.pow(2, maxRetries - retries) * 1000; // Exponential backoff\r\n      console.log(`⏳ Retrying in ${delay}ms... (${retries} retries left)`);\r\n      \r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n      return apiCall(endpoint, options, retries - 1);\r\n    }\r\n    \r\n    // Enhanced error handling\r\n    if (error.response?.status === 401) {\r\n      // Already handled in interceptor\r\n    }\r\n    \r\n    // Return a consistent error format\r\n    let errorMessage;\r\n    \r\n    if (isCorsError) {\r\n      errorMessage = \"CORS error: Backend is not configured to accept requests from this origin. Please check backend CORS settings.\";\r\n    } else if (isTimeout) {\r\n      errorMessage = \"Backend server is not responding. Please check if the server is running.\";\r\n    } else if (isNetworkError) {\r\n      errorMessage = \"Network connection failed. Please check your internet connection.\";\r\n    } else if (error.response?.status === 400) {\r\n      errorMessage = \"Bad Request: Invalid data sent to server. Please check your input.\";\r\n    } else if (error.response?.status === 404) {\r\n      errorMessage = \"Endpoint not found. The requested resource does not exist.\";\r\n    } else if (error.response?.status === 500) {\r\n      errorMessage = \"Server error. Please try again later.\";\r\n    } else {\r\n      errorMessage = error.response?.data?.message || error.message || \"API request failed\";\r\n    }\r\n    \r\n    throw {\r\n      success: false,\r\n      message: errorMessage,\r\n      status: error.response?.status,\r\n      code: error.code,\r\n      data: error.response?.data,\r\n      isTimeout,\r\n      isNetworkError,\r\n      isCorsError\r\n    };\r\n  }\r\n};\r\n\r\n// Enhanced API methods with proper response handling\r\nexport const api = {\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"GET\",\r\n        params \r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Request successful\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"POST\", \r\n        data \r\n      });\r\n      \r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Created successfully\",\r\n        status: 201\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"PUT\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Updated successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n  \r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"DELETE\" \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Deleted successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status,\r\n        code: error.code,\r\n        isTimeout: error.isTimeout,\r\n        isNetworkError: error.isNetworkError,\r\n        isCorsError: error.isCorsError,\r\n        data: null\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n// Convenience methods for specific endpoints\r\nexport const apiMethods = {\r\n  // Auth\r\n  login: (credentials) => api.post(API_ENDPOINTS.LOGIN, credentials),\r\n  register: (userData) => api.post(API_ENDPOINTS.REGISTER, userData),\r\n  getProfile: () => api.get(API_ENDPOINTS.ME),\r\n  \r\n  // Data\r\n  getFaculties: () => api.get(API_ENDPOINTS.FACULTIES),\r\n  getCourses: () => api.get(API_ENDPOINTS.COURSES),\r\n  getClasses: () => api.get(API_ENDPOINTS.CLASSES),\r\n  getMyClasses: () => api.get(API_ENDPOINTS.MY_CLASSES),\r\n  getLecturers: () => api.get(API_ENDPOINTS.LECTURERS),\r\n  \r\n  // Reports\r\n  getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS, params),\r\n  getReportStats: () => api.get(API_ENDPOINTS.REPORTS_STATS),\r\n  getReportById: (id) => api.get(API_ENDPOINTS.REPORTS_BY_ID(id)),\r\n  createReport: (data) => api.post(API_ENDPOINTS.REPORTS, data),\r\n  submitFeedback: (id, feedback) => api.post(API_ENDPOINTS.REPORTS_FEEDBACK(id), { feedback }),\r\n  \r\n  // Ratings\r\n  getMyRatings: () => api.get(API_ENDPOINTS.RATINGS_MY),\r\n  getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS_LECTURER),\r\n  submitRating: (ratingData) => api.post(API_ENDPOINTS.RATINGS, ratingData),\r\n  \r\n  // Student Monitoring\r\n  getStudentAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT_ATTENDANCE, params),\r\n  getStudentStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT_STATS, params),\r\n  getStudentPerformance: () => api.get(API_ENDPOINTS.STUDENT_PERFORMANCE),\r\n  \r\n  // Analytics\r\n  getAnalyticsOverview: () => api.get(API_ENDPOINTS.ANALYTICS_OVERVIEW),\r\n  getAnalyticsTrends: () => api.get(API_ENDPOINTS.ANALYTICS_TRENDS),\r\n  \r\n  // User Management\r\n  getUsers: () => api.get(API_ENDPOINTS.USERS),\r\n  updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS_UPDATE_ROLE(id), { role }),\r\n  \r\n  // Search\r\n  search: (query) => api.get(API_ENDPOINTS.SEARCH, { q: query }),\r\n  \r\n  // System\r\n  healthCheck: () => api.get(API_ENDPOINTS.HEALTH),\r\n  testConnection: () => api.get(API_ENDPOINTS.TEST),\r\n};\r\n\r\n// Enhanced backend connection test with detailed diagnostics\r\nexport const testBackendConnection = async () => {\r\n  console.group('🔍 Backend Connection Diagnostics');\r\n  \r\n  try {\r\n    console.log('📡 Testing connection to:', API_BASE_URL);\r\n    \r\n    const startTime = Date.now();\r\n    const testResponse = await apiMethods.testConnection();\r\n    const endTime = Date.now();\r\n    \r\n    console.log('✅ Backend connection successful:', {\r\n      responseTime: `${endTime - startTime}ms`,\r\n      status: testResponse.status,\r\n      data: testResponse.data\r\n    });\r\n    \r\n    return {\r\n      connected: true,\r\n      responseTime: endTime - startTime,\r\n      status: testResponse.status,\r\n      message: 'Backend is responding correctly'\r\n    };\r\n  } catch (error) {\r\n    console.error('❌ Backend connection failed:', {\r\n      message: error.message,\r\n      status: error.status,\r\n      isTimeout: error.isTimeout,\r\n      isNetworkError: error.isNetworkError,\r\n      isCorsError: error.isCorsError\r\n    });\r\n    \r\n    return {\r\n      connected: false,\r\n      message: error.message,\r\n      isTimeout: error.isTimeout,\r\n      isNetworkError: error.isNetworkError,\r\n      isCorsError: error.isCorsError,\r\n      status: error.status\r\n    };\r\n  } finally {\r\n    console.groupEnd();\r\n  }\r\n};\r\n\r\n// Connection status monitor\r\nlet connectionStatus = 'unknown';\r\nexport const getConnectionStatus = () => connectionStatus;\r\n\r\n// Initialize connection test with retry\r\nexport const initializeApp = async () => {\r\n  console.log('🚀 Initializing application...');\r\n  \r\n  // Wait a bit for backend to wake up (if it's sleeping)\r\n  await new Promise(resolve => setTimeout(resolve, 2000));\r\n  \r\n  const result = await testBackendConnection();\r\n  connectionStatus = result.connected ? 'connected' : 'disconnected';\r\n  \r\n  if (!result.connected) {\r\n    console.warn('⚠️ Application starting in limited mode. Some features may not work.');\r\n    \r\n    // Show user-friendly warning\r\n    if (typeof window !== 'undefined' && result.isCorsError) {\r\n      setTimeout(() => {\r\n        const alertDiv = document.createElement('div');\r\n        alertDiv.className = 'alert alert-warning alert-dismissible fade show';\r\n        alertDiv.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 9999; max-width: 400px;';\r\n        alertDiv.innerHTML = `\r\n          <strong>⚠️ CORS Configuration Issue</strong>\r\n          <p class=\"mb-1\">Backend is not accepting requests from this origin. Please check backend CORS settings.</p>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\r\n        `;\r\n        document.body.appendChild(alertDiv);\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  return result;\r\n};\r\n\r\n// Export connection utilities\r\nexport const connectionUtils = {\r\n  testBackendConnection,\r\n  getConnectionStatus,\r\n  initializeApp\r\n};\r\n\r\n// Auto-initialize (but don't block app startup)\r\nsetTimeout(() => {\r\n  initializeApp();\r\n}, 1000);\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}