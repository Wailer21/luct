{"ast":null,"code":"import axios from \"axios\";\n\n// Base API URL (from frontend .env)\nconst API_BASE_URL = process.env.REACT_APP_API_URL ? `${process.env.REACT_APP_API_URL}/api` : \"https://luct-5-o0v9.onrender.com/api\";\n\n// Enhanced API endpoints with all routes\nexport const API_ENDPOINTS = {\n  // Auth\n  AUTH: {\n    REGISTER: `${API_BASE_URL}/auth/register`,\n    LOGIN: `${API_BASE_URL}/auth/login`,\n    ME: `${API_BASE_URL}/auth/me`\n  },\n  // Data Management\n  DATA: {\n    FACULTIES: `${API_BASE_URL}/faculties`,\n    COURSES: `${API_BASE_URL}/courses`,\n    COURSES_BY_ID: id => `${API_BASE_URL}/courses/${id}`,\n    CLASSES: `${API_BASE_URL}/classes`,\n    CLASSES_BY_ID: id => `${API_BASE_URL}/classes/${id}`,\n    MY_CLASSES: `${API_BASE_URL}/my-classes`,\n    LECTURERS: `${API_BASE_URL}/lecturers`\n  },\n  // Reports Management\n  REPORTS: {\n    LIST: `${API_BASE_URL}/reports`,\n    STATS: `${API_BASE_URL}/reports/stats`,\n    COURSE_STATS: `${API_BASE_URL}/reports/course-stats`,\n    WEEKLY_TREND: `${API_BASE_URL}/reports/weekly-trend`,\n    BY_ID: id => `${API_BASE_URL}/reports/${id}`,\n    FEEDBACK: id => `${API_BASE_URL}/reports/${id}/feedback`\n  },\n  // Ratings System\n  RATINGS: {\n    SUBMIT: `${API_BASE_URL}/ratings`,\n    MY_RATINGS: `${API_BASE_URL}/ratings/my-ratings`,\n    LECTURER_RATINGS: `${API_BASE_URL}/ratings/lecturer`\n  },\n  // Student Monitoring\n  STUDENT: {\n    ATTENDANCE: `${API_BASE_URL}/students/attendance`,\n    STATS: `${API_BASE_URL}/students/stats`,\n    PERFORMANCE: `${API_BASE_URL}/students/performance`\n  },\n  // Analytics & Monitoring\n  ANALYTICS: {\n    OVERVIEW: `${API_BASE_URL}/analytics/overview`,\n    TRENDS: `${API_BASE_URL}/analytics/trends`\n  },\n  // User Management\n  USERS: {\n    LIST: `${API_BASE_URL}/users`,\n    UPDATE_ROLE: id => `${API_BASE_URL}/users/${id}/role`\n  },\n  // Search\n  SEARCH: `${API_BASE_URL}/search`,\n  // System\n  SYSTEM: {\n    HEALTH: `${API_BASE_URL}/health`,\n    TEST: `${API_BASE_URL}/test`\n  }\n};\n\n// Get token from localStorage with fallback\nexport const getAuthToken = () => {\n  return localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\n};\n\n// Enhanced API instance with interceptors\nconst createApiInstance = () => {\n  const instance = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 30000,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Request interceptor\n  instance.interceptors.request.use(config => {\n    const token = getAuthToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    // Log API calls in development\n    if (process.env.NODE_ENV === 'development') {\n      var _config$method;\n      console.log(`🚀 ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, config.data || config.params || '');\n    }\n    return config;\n  }, error => {\n    console.error('❌ Request interceptor error:', error);\n    return Promise.reject(error);\n  });\n\n  // Response interceptor\n  instance.interceptors.response.use(response => {\n    return response;\n  }, error => {\n    var _error$config, _error$config2;\n    const {\n      status,\n      data\n    } = error.response || {};\n\n    // Handle authentication errors\n    if (status === 401) {\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n      sessionStorage.removeItem(\"token\");\n      sessionStorage.removeItem(\"user\");\n\n      // Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = \"/login?session_expired=true\";\n      }\n    }\n\n    // Enhanced error logging\n    console.error('❌ API Error:', {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      status: status,\n      message: (data === null || data === void 0 ? void 0 : data.message) || error.message,\n      data: data\n    });\n    return Promise.reject(error);\n  });\n  return instance;\n};\nconst apiInstance = createApiInstance();\n\n// Enhanced API call wrapper with better error handling\nexport const apiCall = async (endpoint, options = {}) => {\n  try {\n    const config = {\n      url: endpoint,\n      ...options\n    };\n    const response = await apiInstance(config);\n\n    // Handle backend response format\n    if (response.data && response.data.success === false) {\n      throw new Error(response.data.message || \"Request failed\");\n    }\n    return response.data;\n  } catch (error) {\n    const {\n      status,\n      data\n    } = error.response || {};\n\n    // Create user-friendly error messages\n    let userMessage = \"An unexpected error occurred\";\n    if (status === 400) {\n      userMessage = (data === null || data === void 0 ? void 0 : data.message) || \"Invalid request data\";\n    } else if (status === 401) {\n      userMessage = \"Authentication required\";\n    } else if (status === 403) {\n      userMessage = \"You don't have permission to perform this action\";\n    } else if (status === 404) {\n      userMessage = \"Resource not found\";\n    } else if (status === 409) {\n      userMessage = \"Resource already exists\";\n    } else if (status === 500) {\n      userMessage = \"Server error. Please try again later\";\n    } else if (error.message) {\n      userMessage = error.message;\n    }\n    throw {\n      success: false,\n      message: userMessage,\n      status: status,\n      data: data,\n      originalError: error\n    };\n  }\n};\n\n// Enhanced API methods with consistent response format\nexport const api = {\n  get: async (endpoint, params = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"GET\",\n        params\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Data retrieved successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status\n      };\n    }\n  },\n  post: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"POST\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Created successfully\",\n        status: 201\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status\n      };\n    }\n  },\n  put: async (endpoint, data = {}) => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"PUT\",\n        data\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Updated successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status\n      };\n    }\n  },\n  delete: async endpoint => {\n    try {\n      const response = await apiCall(endpoint, {\n        method: \"DELETE\"\n      });\n      return {\n        success: true,\n        data: response.data || response,\n        message: response.message || \"Deleted successfully\",\n        status: 200\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message,\n        error: error.data,\n        status: error.status\n      };\n    }\n  }\n};\n\n// Convenience methods for specific endpoints\nexport const apiMethods = {\n  // Auth\n  auth: {\n    login: credentials => api.post(API_ENDPOINTS.AUTH.LOGIN, credentials),\n    register: userData => api.post(API_ENDPOINTS.AUTH.REGISTER, userData),\n    getProfile: () => api.get(API_ENDPOINTS.AUTH.ME)\n  },\n  // Data Management\n  data: {\n    getFaculties: () => api.get(API_ENDPOINTS.DATA.FACULTIES),\n    getCourses: () => api.get(API_ENDPOINTS.DATA.COURSES),\n    getCourseById: id => api.get(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\n    createCourse: data => api.post(API_ENDPOINTS.DATA.COURSES, data),\n    updateCourse: (id, data) => api.put(API_ENDPOINTS.DATA.COURSES_BY_ID(id), data),\n    deleteCourse: id => api.delete(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\n    getClasses: () => api.get(API_ENDPOINTS.DATA.CLASSES),\n    getClassById: id => api.get(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\n    createClass: data => api.post(API_ENDPOINTS.DATA.CLASSES, data),\n    updateClass: (id, data) => api.put(API_ENDPOINTS.DATA.CLASSES_BY_ID(id), data),\n    deleteClass: id => api.delete(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\n    getMyClasses: () => api.get(API_ENDPOINTS.DATA.MY_CLASSES),\n    getLecturers: () => api.get(API_ENDPOINTS.DATA.LECTURERS)\n  },\n  // Reports\n  reports: {\n    getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS.LIST, params),\n    getReportStats: () => api.get(API_ENDPOINTS.REPORTS.STATS),\n    getCourseStats: () => api.get(API_ENDPOINTS.REPORTS.COURSE_STATS),\n    getWeeklyTrend: () => api.get(API_ENDPOINTS.REPORTS.WEEKLY_TREND),\n    getReportById: id => api.get(API_ENDPOINTS.REPORTS.BY_ID(id)),\n    createReport: data => api.post(API_ENDPOINTS.REPORTS.LIST, data),\n    submitFeedback: (id, feedback) => api.post(API_ENDPOINTS.REPORTS.FEEDBACK(id), {\n      feedback\n    }),\n    getFeedback: id => api.get(API_ENDPOINTS.REPORTS.FEEDBACK(id))\n  },\n  // Ratings\n  ratings: {\n    getMyRatings: () => api.get(API_ENDPOINTS.RATINGS.MY_RATINGS),\n    getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS.LECTURER_RATINGS),\n    submitRating: ratingData => api.post(API_ENDPOINTS.RATINGS.SUBMIT, ratingData)\n  },\n  // Student Monitoring\n  student: {\n    getAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT.ATTENDANCE, params),\n    getStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT.STATS, params),\n    getPerformance: () => api.get(API_ENDPOINTS.STUDENT.PERFORMANCE)\n  },\n  // Analytics\n  analytics: {\n    getOverview: () => api.get(API_ENDPOINTS.ANALYTICS.OVERVIEW),\n    getTrends: () => api.get(API_ENDPOINTS.ANALYTICS.TRENDS)\n  },\n  // User Management\n  users: {\n    getUsers: () => api.get(API_ENDPOINTS.USERS.LIST),\n    updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS.UPDATE_ROLE(id), {\n      role\n    })\n  },\n  // Search\n  search: query => api.get(API_ENDPOINTS.SEARCH, {\n    q: query\n  }),\n  // System\n  system: {\n    healthCheck: () => api.get(API_ENDPOINTS.SYSTEM.HEALTH),\n    testConnection: () => api.get(API_ENDPOINTS.SYSTEM.TEST)\n  }\n};\n\n// Utility functions\nexport const apiUtils = {\n  // Test backend connection\n  testConnection: async () => {\n    try {\n      const response = await apiMethods.system.testConnection();\n      console.log('✅ Backend connection successful');\n      return {\n        connected: true,\n        data: response.data\n      };\n    } catch (error) {\n      console.error('❌ Backend connection failed:', error.message);\n      return {\n        connected: false,\n        error: error.message\n      };\n    }\n  },\n  // Health check\n  healthCheck: async () => {\n    try {\n      const response = await apiMethods.system.healthCheck();\n      return {\n        healthy: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        healthy: false,\n        error: error.message\n      };\n    }\n  },\n  // Batch requests\n  batch: requests => Promise.all(requests),\n  // Retry mechanism\n  retry: async (fn, retries = 3, delay = 1000) => {\n    try {\n      return await fn();\n    } catch (error) {\n      if (retries === 0) throw error;\n      await new Promise(resolve => setTimeout(resolve, delay));\n      return apiUtils.retry(fn, retries - 1, delay * 2);\n    }\n  }\n};\n\n// Initialize connection test on import\nif (typeof window !== 'undefined') {\n  apiUtils.testConnection().then(result => {\n    if (result.connected) {\n      console.log('🎉 API initialized successfully');\n    } else {\n      console.warn('⚠️ API connection issues - some features may not work');\n    }\n  });\n}\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","API_ENDPOINTS","AUTH","REGISTER","LOGIN","ME","DATA","FACULTIES","COURSES","COURSES_BY_ID","id","CLASSES","CLASSES_BY_ID","MY_CLASSES","LECTURERS","REPORTS","LIST","STATS","COURSE_STATS","WEEKLY_TREND","BY_ID","FEEDBACK","RATINGS","SUBMIT","MY_RATINGS","LECTURER_RATINGS","STUDENT","ATTENDANCE","PERFORMANCE","ANALYTICS","OVERVIEW","TRENDS","USERS","UPDATE_ROLE","SEARCH","SYSTEM","HEALTH","TEST","getAuthToken","localStorage","getItem","sessionStorage","createApiInstance","instance","create","baseURL","timeout","headers","interceptors","request","use","config","token","Authorization","NODE_ENV","_config$method","console","log","method","toUpperCase","url","data","params","error","Promise","reject","response","_error$config","_error$config2","status","removeItem","window","location","pathname","includes","href","message","apiInstance","apiCall","endpoint","options","success","Error","userMessage","originalError","api","get","post","put","delete","apiMethods","auth","login","credentials","register","userData","getProfile","getFaculties","getCourses","getCourseById","createCourse","updateCourse","deleteCourse","getClasses","getClassById","createClass","updateClass","deleteClass","getMyClasses","getLecturers","reports","getReports","getReportStats","getCourseStats","getWeeklyTrend","getReportById","createReport","submitFeedback","feedback","getFeedback","ratings","getMyRatings","getLecturerRatings","submitRating","ratingData","student","getAttendance","getStats","getPerformance","analytics","getOverview","getTrends","users","getUsers","updateUserRole","role","search","query","q","system","healthCheck","testConnection","apiUtils","connected","healthy","batch","requests","all","retry","fn","retries","delay","resolve","setTimeout","then","result","warn"],"sources":["C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base API URL (from frontend .env)\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL\r\n  ? `${process.env.REACT_APP_API_URL}/api`\r\n  : \"https://luct-5-o0v9.onrender.com/api\";\r\n\r\n// Enhanced API endpoints with all routes\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  AUTH: {\r\n    REGISTER: `${API_BASE_URL}/auth/register`,\r\n    LOGIN: `${API_BASE_URL}/auth/login`,\r\n    ME: `${API_BASE_URL}/auth/me`,\r\n  },\r\n\r\n  // Data Management\r\n  DATA: {\r\n    FACULTIES: `${API_BASE_URL}/faculties`,\r\n    COURSES: `${API_BASE_URL}/courses`,\r\n    COURSES_BY_ID: (id) => `${API_BASE_URL}/courses/${id}`,\r\n    CLASSES: `${API_BASE_URL}/classes`,\r\n    CLASSES_BY_ID: (id) => `${API_BASE_URL}/classes/${id}`,\r\n    MY_CLASSES: `${API_BASE_URL}/my-classes`,\r\n    LECTURERS: `${API_BASE_URL}/lecturers`,\r\n  },\r\n\r\n  // Reports Management\r\n  REPORTS: {\r\n    LIST: `${API_BASE_URL}/reports`,\r\n    STATS: `${API_BASE_URL}/reports/stats`,\r\n    COURSE_STATS: `${API_BASE_URL}/reports/course-stats`,\r\n    WEEKLY_TREND: `${API_BASE_URL}/reports/weekly-trend`,\r\n    BY_ID: (id) => `${API_BASE_URL}/reports/${id}`,\r\n    FEEDBACK: (id) => `${API_BASE_URL}/reports/${id}/feedback`,\r\n  },\r\n\r\n  // Ratings System\r\n  RATINGS: {\r\n    SUBMIT: `${API_BASE_URL}/ratings`,\r\n    MY_RATINGS: `${API_BASE_URL}/ratings/my-ratings`,\r\n    LECTURER_RATINGS: `${API_BASE_URL}/ratings/lecturer`,\r\n  },\r\n\r\n  // Student Monitoring\r\n  STUDENT: {\r\n    ATTENDANCE: `${API_BASE_URL}/students/attendance`,\r\n    STATS: `${API_BASE_URL}/students/stats`,\r\n    PERFORMANCE: `${API_BASE_URL}/students/performance`,\r\n  },\r\n\r\n  // Analytics & Monitoring\r\n  ANALYTICS: {\r\n    OVERVIEW: `${API_BASE_URL}/analytics/overview`,\r\n    TRENDS: `${API_BASE_URL}/analytics/trends`,\r\n  },\r\n\r\n  // User Management\r\n  USERS: {\r\n    LIST: `${API_BASE_URL}/users`,\r\n    UPDATE_ROLE: (id) => `${API_BASE_URL}/users/${id}/role`,\r\n  },\r\n\r\n  // Search\r\n  SEARCH: `${API_BASE_URL}/search`,\r\n\r\n  // System\r\n  SYSTEM: {\r\n    HEALTH: `${API_BASE_URL}/health`,\r\n    TEST: `${API_BASE_URL}/test`,\r\n  },\r\n};\r\n\r\n// Get token from localStorage with fallback\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n};\r\n\r\n// Enhanced API instance with interceptors\r\nconst createApiInstance = () => {\r\n  const instance = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    timeout: 30000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  // Request interceptor\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      const token = getAuthToken();\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      \r\n      // Log API calls in development\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`🚀 ${config.method?.toUpperCase()} ${config.url}`, config.data || config.params || '');\r\n      }\r\n      \r\n      return config;\r\n    },\r\n    (error) => {\r\n      console.error('❌ Request interceptor error:', error);\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // Response interceptor\r\n  instance.interceptors.response.use(\r\n    (response) => {\r\n      return response;\r\n    },\r\n    (error) => {\r\n      const { status, data } = error.response || {};\r\n      \r\n      // Handle authentication errors\r\n      if (status === 401) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"user\");\r\n        \r\n        // Only redirect if not already on login page\r\n        if (!window.location.pathname.includes('/login')) {\r\n          window.location.href = \"/login?session_expired=true\";\r\n        }\r\n      }\r\n      \r\n      // Enhanced error logging\r\n      console.error('❌ API Error:', {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        status: status,\r\n        message: data?.message || error.message,\r\n        data: data\r\n      });\r\n      \r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nconst apiInstance = createApiInstance();\r\n\r\n// Enhanced API call wrapper with better error handling\r\nexport const apiCall = async (endpoint, options = {}) => {\r\n  try {\r\n    const config = {\r\n      url: endpoint,\r\n      ...options,\r\n    };\r\n\r\n    const response = await apiInstance(config);\r\n    \r\n    // Handle backend response format\r\n    if (response.data && response.data.success === false) {\r\n      throw new Error(response.data.message || \"Request failed\");\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    const { status, data } = error.response || {};\r\n    \r\n    // Create user-friendly error messages\r\n    let userMessage = \"An unexpected error occurred\";\r\n    \r\n    if (status === 400) {\r\n      userMessage = data?.message || \"Invalid request data\";\r\n    } else if (status === 401) {\r\n      userMessage = \"Authentication required\";\r\n    } else if (status === 403) {\r\n      userMessage = \"You don't have permission to perform this action\";\r\n    } else if (status === 404) {\r\n      userMessage = \"Resource not found\";\r\n    } else if (status === 409) {\r\n      userMessage = \"Resource already exists\";\r\n    } else if (status === 500) {\r\n      userMessage = \"Server error. Please try again later\";\r\n    } else if (error.message) {\r\n      userMessage = error.message;\r\n    }\r\n    \r\n    throw {\r\n      success: false,\r\n      message: userMessage,\r\n      status: status,\r\n      data: data,\r\n      originalError: error\r\n    };\r\n  }\r\n};\r\n\r\n// Enhanced API methods with consistent response format\r\nexport const api = {\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"GET\",\r\n        params \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Data retrieved successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"POST\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Created successfully\",\r\n        status: 201\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"PUT\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Updated successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"DELETE\" \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Deleted successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n// Convenience methods for specific endpoints\r\nexport const apiMethods = {\r\n  // Auth\r\n  auth: {\r\n    login: (credentials) => api.post(API_ENDPOINTS.AUTH.LOGIN, credentials),\r\n    register: (userData) => api.post(API_ENDPOINTS.AUTH.REGISTER, userData),\r\n    getProfile: () => api.get(API_ENDPOINTS.AUTH.ME),\r\n  },\r\n\r\n  // Data Management\r\n  data: {\r\n    getFaculties: () => api.get(API_ENDPOINTS.DATA.FACULTIES),\r\n    getCourses: () => api.get(API_ENDPOINTS.DATA.COURSES),\r\n    getCourseById: (id) => api.get(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\r\n    createCourse: (data) => api.post(API_ENDPOINTS.DATA.COURSES, data),\r\n    updateCourse: (id, data) => api.put(API_ENDPOINTS.DATA.COURSES_BY_ID(id), data),\r\n    deleteCourse: (id) => api.delete(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\r\n    getClasses: () => api.get(API_ENDPOINTS.DATA.CLASSES),\r\n    getClassById: (id) => api.get(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\r\n    createClass: (data) => api.post(API_ENDPOINTS.DATA.CLASSES, data),\r\n    updateClass: (id, data) => api.put(API_ENDPOINTS.DATA.CLASSES_BY_ID(id), data),\r\n    deleteClass: (id) => api.delete(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\r\n    getMyClasses: () => api.get(API_ENDPOINTS.DATA.MY_CLASSES),\r\n    getLecturers: () => api.get(API_ENDPOINTS.DATA.LECTURERS),\r\n  },\r\n\r\n  // Reports\r\n  reports: {\r\n    getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS.LIST, params),\r\n    getReportStats: () => api.get(API_ENDPOINTS.REPORTS.STATS),\r\n    getCourseStats: () => api.get(API_ENDPOINTS.REPORTS.COURSE_STATS),\r\n    getWeeklyTrend: () => api.get(API_ENDPOINTS.REPORTS.WEEKLY_TREND),\r\n    getReportById: (id) => api.get(API_ENDPOINTS.REPORTS.BY_ID(id)),\r\n    createReport: (data) => api.post(API_ENDPOINTS.REPORTS.LIST, data),\r\n    submitFeedback: (id, feedback) => api.post(API_ENDPOINTS.REPORTS.FEEDBACK(id), { feedback }),\r\n    getFeedback: (id) => api.get(API_ENDPOINTS.REPORTS.FEEDBACK(id)),\r\n  },\r\n\r\n  // Ratings\r\n  ratings: {\r\n    getMyRatings: () => api.get(API_ENDPOINTS.RATINGS.MY_RATINGS),\r\n    getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS.LECTURER_RATINGS),\r\n    submitRating: (ratingData) => api.post(API_ENDPOINTS.RATINGS.SUBMIT, ratingData),\r\n  },\r\n\r\n  // Student Monitoring\r\n  student: {\r\n    getAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT.ATTENDANCE, params),\r\n    getStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT.STATS, params),\r\n    getPerformance: () => api.get(API_ENDPOINTS.STUDENT.PERFORMANCE),\r\n  },\r\n\r\n  // Analytics\r\n  analytics: {\r\n    getOverview: () => api.get(API_ENDPOINTS.ANALYTICS.OVERVIEW),\r\n    getTrends: () => api.get(API_ENDPOINTS.ANALYTICS.TRENDS),\r\n  },\r\n\r\n  // User Management\r\n  users: {\r\n    getUsers: () => api.get(API_ENDPOINTS.USERS.LIST),\r\n    updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS.UPDATE_ROLE(id), { role }),\r\n  },\r\n\r\n  // Search\r\n  search: (query) => api.get(API_ENDPOINTS.SEARCH, { q: query }),\r\n\r\n  // System\r\n  system: {\r\n    healthCheck: () => api.get(API_ENDPOINTS.SYSTEM.HEALTH),\r\n    testConnection: () => api.get(API_ENDPOINTS.SYSTEM.TEST),\r\n  },\r\n};\r\n\r\n// Utility functions\r\nexport const apiUtils = {\r\n  // Test backend connection\r\n  testConnection: async () => {\r\n    try {\r\n      const response = await apiMethods.system.testConnection();\r\n      console.log('✅ Backend connection successful');\r\n      return { connected: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('❌ Backend connection failed:', error.message);\r\n      return { connected: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await apiMethods.system.healthCheck();\r\n      return { healthy: true, data: response.data };\r\n    } catch (error) {\r\n      return { healthy: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Batch requests\r\n  batch: (requests) => Promise.all(requests),\r\n\r\n  // Retry mechanism\r\n  retry: async (fn, retries = 3, delay = 1000) => {\r\n    try {\r\n      return await fn();\r\n    } catch (error) {\r\n      if (retries === 0) throw error;\r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n      return apiUtils.retry(fn, retries - 1, delay * 2);\r\n    }\r\n  },\r\n};\r\n\r\n// Initialize connection test on import\r\nif (typeof window !== 'undefined') {\r\n  apiUtils.testConnection().then(result => {\r\n    if (result.connected) {\r\n      console.log('🎉 API initialized successfully');\r\n    } else {\r\n      console.warn('⚠️ API connection issues - some features may not work');\r\n    }\r\n  });\r\n}\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}