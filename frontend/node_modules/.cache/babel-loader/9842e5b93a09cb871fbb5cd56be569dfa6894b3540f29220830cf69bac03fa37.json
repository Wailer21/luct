{"ast":null,"code":"import _objectSpread from\"C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from\"axios\";// Base API URL (from frontend .env)\nconst API_BASE_URL=process.env.REACT_APP_API_URL?\"\".concat(process.env.REACT_APP_API_URL,\"/api\"):\"https://luct-tcm7.onrender.com/api\";// Enhanced API endpoints with all routes\nexport const API_ENDPOINTS={// Auth\nAUTH:{REGISTER:\"\".concat(API_BASE_URL,\"/auth/register\"),LOGIN:\"\".concat(API_BASE_URL,\"/auth/login\"),ME:\"\".concat(API_BASE_URL,\"/auth/me\")},// Data Management\nDATA:{FACULTIES:\"\".concat(API_BASE_URL,\"/faculties\"),COURSES:\"\".concat(API_BASE_URL,\"/courses\"),COURSES_BY_ID:id=>\"\".concat(API_BASE_URL,\"/courses/\").concat(id),CLASSES:\"\".concat(API_BASE_URL,\"/classes\"),CLASSES_BY_ID:id=>\"\".concat(API_BASE_URL,\"/classes/\").concat(id),MY_CLASSES:\"\".concat(API_BASE_URL,\"/my-classes\"),LECTURERS:\"\".concat(API_BASE_URL,\"/lecturers\")},// Reports Management\nREPORTS:{LIST:\"\".concat(API_BASE_URL,\"/reports\"),STATS:\"\".concat(API_BASE_URL,\"/reports/stats\"),COURSE_STATS:\"\".concat(API_BASE_URL,\"/reports/course-stats\"),WEEKLY_TREND:\"\".concat(API_BASE_URL,\"/reports/weekly-trend\"),BY_ID:id=>\"\".concat(API_BASE_URL,\"/reports/\").concat(id),FEEDBACK:id=>\"\".concat(API_BASE_URL,\"/reports/\").concat(id,\"/feedback\")},// Ratings System\nRATINGS:{SUBMIT:\"\".concat(API_BASE_URL,\"/ratings\"),MY_RATINGS:\"\".concat(API_BASE_URL,\"/ratings/my-ratings\"),LECTURER_RATINGS:\"\".concat(API_BASE_URL,\"/ratings/lecturer\")},// Student Monitoring\nSTUDENT:{ATTENDANCE:\"\".concat(API_BASE_URL,\"/students/attendance\"),STATS:\"\".concat(API_BASE_URL,\"/students/stats\"),PERFORMANCE:\"\".concat(API_BASE_URL,\"/students/performance\")},// Analytics & Monitoring\nANALYTICS:{OVERVIEW:\"\".concat(API_BASE_URL,\"/analytics/overview\"),TRENDS:\"\".concat(API_BASE_URL,\"/analytics/trends\")},// User Management\nUSERS:{LIST:\"\".concat(API_BASE_URL,\"/users\"),UPDATE_ROLE:id=>\"\".concat(API_BASE_URL,\"/users/\").concat(id,\"/role\")},// Search\nSEARCH:\"\".concat(API_BASE_URL,\"/search\"),// System\nSYSTEM:{HEALTH:\"\".concat(API_BASE_URL,\"/health\"),TEST:\"\".concat(API_BASE_URL,\"/test\")}};// Get token from localStorage with fallback\nexport const getAuthToken=()=>{return localStorage.getItem(\"token\")||sessionStorage.getItem(\"token\");};// Enhanced API instance with interceptors\nconst createApiInstance=()=>{const instance=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{\"Content-Type\":\"application/json\"}});// Request interceptor\ninstance.interceptors.request.use(config=>{const token=getAuthToken();if(token){config.headers.Authorization=\"Bearer \".concat(token);}// Log API calls in development\nif(process.env.NODE_ENV==='development'){var _config$method;console.log(\"\\uD83D\\uDE80 \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url),config.data||config.params||'');}return config;},error=>{console.error('❌ Request interceptor error:',error);return Promise.reject(error);});// Response interceptor\ninstance.interceptors.response.use(response=>{return response;},error=>{var _error$config,_error$config2;const{status,data}=error.response||{};// Handle authentication errors\nif(status===401){localStorage.removeItem(\"token\");localStorage.removeItem(\"user\");sessionStorage.removeItem(\"token\");sessionStorage.removeItem(\"user\");// Only redirect if not already on login page\nif(!window.location.pathname.includes('/login')){window.location.href=\"/login?session_expired=true\";}}// Enhanced error logging\nconsole.error('❌ API Error:',{url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url,method:(_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.method,status:status,message:(data===null||data===void 0?void 0:data.message)||error.message,data:data});return Promise.reject(error);});return instance;};const apiInstance=createApiInstance();// Enhanced API call wrapper with better error handling\nexport const apiCall=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const config=_objectSpread({url:endpoint},options);const response=await apiInstance(config);// Handle backend response format\nif(response.data&&response.data.success===false){throw new Error(response.data.message||\"Request failed\");}return response.data;}catch(error){const{status,data}=error.response||{};// Create user-friendly error messages\nlet userMessage=\"An unexpected error occurred\";if(status===400){userMessage=(data===null||data===void 0?void 0:data.message)||\"Invalid request data\";}else if(status===401){userMessage=\"Authentication required\";}else if(status===403){userMessage=\"You don't have permission to perform this action\";}else if(status===404){userMessage=\"Resource not found\";}else if(status===409){userMessage=\"Resource already exists\";}else if(status===500){userMessage=\"Server error. Please try again later\";}else if(error.message){userMessage=error.message;}throw{success:false,message:userMessage,status:status,data:data,originalError:error};}};// Enhanced API methods with consistent response format\nexport const api={get:async function(endpoint){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiCall(endpoint,{method:\"GET\",params});return{success:true,data:response.data||response,message:response.message||\"Data retrieved successfully\",status:200};}catch(error){return{success:false,message:error.message,error:error.data,status:error.status};}},post:async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiCall(endpoint,{method:\"POST\",data});return{success:true,data:response.data||response,message:response.message||\"Created successfully\",status:201};}catch(error){return{success:false,message:error.message,error:error.data,status:error.status};}},put:async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiCall(endpoint,{method:\"PUT\",data});return{success:true,data:response.data||response,message:response.message||\"Updated successfully\",status:200};}catch(error){return{success:false,message:error.message,error:error.data,status:error.status};}},delete:async endpoint=>{try{const response=await apiCall(endpoint,{method:\"DELETE\"});return{success:true,data:response.data||response,message:response.message||\"Deleted successfully\",status:200};}catch(error){return{success:false,message:error.message,error:error.data,status:error.status};}}};// Convenience methods for specific endpoints\nexport const apiMethods={// Auth\nauth:{login:credentials=>api.post(API_ENDPOINTS.AUTH.LOGIN,credentials),register:userData=>api.post(API_ENDPOINTS.AUTH.REGISTER,userData),getProfile:()=>api.get(API_ENDPOINTS.AUTH.ME)},// Data Management\ndata:{getFaculties:()=>api.get(API_ENDPOINTS.DATA.FACULTIES),getCourses:()=>api.get(API_ENDPOINTS.DATA.COURSES),getCourseById:id=>api.get(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),createCourse:data=>api.post(API_ENDPOINTS.DATA.COURSES,data),updateCourse:(id,data)=>api.put(API_ENDPOINTS.DATA.COURSES_BY_ID(id),data),deleteCourse:id=>api.delete(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),getClasses:()=>api.get(API_ENDPOINTS.DATA.CLASSES),getClassById:id=>api.get(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),createClass:data=>api.post(API_ENDPOINTS.DATA.CLASSES,data),updateClass:(id,data)=>api.put(API_ENDPOINTS.DATA.CLASSES_BY_ID(id),data),deleteClass:id=>api.delete(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),getMyClasses:()=>api.get(API_ENDPOINTS.DATA.MY_CLASSES),getLecturers:()=>api.get(API_ENDPOINTS.DATA.LECTURERS)},// Reports\nreports:{getReports:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get(API_ENDPOINTS.REPORTS.LIST,params);},getReportStats:()=>api.get(API_ENDPOINTS.REPORTS.STATS),getCourseStats:()=>api.get(API_ENDPOINTS.REPORTS.COURSE_STATS),getWeeklyTrend:()=>api.get(API_ENDPOINTS.REPORTS.WEEKLY_TREND),getReportById:id=>api.get(API_ENDPOINTS.REPORTS.BY_ID(id)),createReport:data=>api.post(API_ENDPOINTS.REPORTS.LIST,data),submitFeedback:(id,feedback)=>api.post(API_ENDPOINTS.REPORTS.FEEDBACK(id),{feedback}),getFeedback:id=>api.get(API_ENDPOINTS.REPORTS.FEEDBACK(id))},// Ratings\nratings:{getMyRatings:()=>api.get(API_ENDPOINTS.RATINGS.MY_RATINGS),getLecturerRatings:()=>api.get(API_ENDPOINTS.RATINGS.LECTURER_RATINGS),submitRating:ratingData=>api.post(API_ENDPOINTS.RATINGS.SUBMIT,ratingData)},// Student Monitoring\nstudent:{getAttendance:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get(API_ENDPOINTS.STUDENT.ATTENDANCE,params);},getStats:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get(API_ENDPOINTS.STUDENT.STATS,params);},getPerformance:()=>api.get(API_ENDPOINTS.STUDENT.PERFORMANCE)},// Analytics\nanalytics:{getOverview:()=>api.get(API_ENDPOINTS.ANALYTICS.OVERVIEW),getTrends:()=>api.get(API_ENDPOINTS.ANALYTICS.TRENDS)},// User Management\nusers:{getUsers:()=>api.get(API_ENDPOINTS.USERS.LIST),updateUserRole:(id,role)=>api.put(API_ENDPOINTS.USERS.UPDATE_ROLE(id),{role})},// Search\nsearch:query=>api.get(API_ENDPOINTS.SEARCH,{q:query}),// System\nsystem:{healthCheck:()=>api.get(API_ENDPOINTS.SYSTEM.HEALTH),testConnection:()=>api.get(API_ENDPOINTS.SYSTEM.TEST)}};// Utility functions\nexport const apiUtils={// Test backend connection\ntestConnection:async()=>{try{const response=await apiMethods.system.testConnection();console.log('✅ Backend connection successful');return{connected:true,data:response.data};}catch(error){console.error('❌ Backend connection failed:',error.message);return{connected:false,error:error.message};}},// Health check\nhealthCheck:async()=>{try{const response=await apiMethods.system.healthCheck();return{healthy:true,data:response.data};}catch(error){return{healthy:false,error:error.message};}},// Batch requests\nbatch:requests=>Promise.all(requests),// Retry mechanism\nretry:async function(fn){let retries=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let delay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;try{return await fn();}catch(error){if(retries===0)throw error;await new Promise(resolve=>setTimeout(resolve,delay));return apiUtils.retry(fn,retries-1,delay*2);}}};// Initialize connection test on import\nif(typeof window!=='undefined'){apiUtils.testConnection().then(result=>{if(result.connected){console.log('🎉 API initialized successfully');}else{console.warn('⚠️ API connection issues - some features may not work');}});}export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","concat","API_ENDPOINTS","AUTH","REGISTER","LOGIN","ME","DATA","FACULTIES","COURSES","COURSES_BY_ID","id","CLASSES","CLASSES_BY_ID","MY_CLASSES","LECTURERS","REPORTS","LIST","STATS","COURSE_STATS","WEEKLY_TREND","BY_ID","FEEDBACK","RATINGS","SUBMIT","MY_RATINGS","LECTURER_RATINGS","STUDENT","ATTENDANCE","PERFORMANCE","ANALYTICS","OVERVIEW","TRENDS","USERS","UPDATE_ROLE","SEARCH","SYSTEM","HEALTH","TEST","getAuthToken","localStorage","getItem","sessionStorage","createApiInstance","instance","create","baseURL","timeout","headers","interceptors","request","use","config","token","Authorization","NODE_ENV","_config$method","console","log","method","toUpperCase","url","data","params","error","Promise","reject","response","_error$config","_error$config2","status","removeItem","window","location","pathname","includes","href","message","apiInstance","apiCall","endpoint","options","arguments","length","undefined","_objectSpread","success","Error","userMessage","originalError","api","get","post","put","delete","apiMethods","auth","login","credentials","register","userData","getProfile","getFaculties","getCourses","getCourseById","createCourse","updateCourse","deleteCourse","getClasses","getClassById","createClass","updateClass","deleteClass","getMyClasses","getLecturers","reports","getReports","getReportStats","getCourseStats","getWeeklyTrend","getReportById","createReport","submitFeedback","feedback","getFeedback","ratings","getMyRatings","getLecturerRatings","submitRating","ratingData","student","getAttendance","getStats","getPerformance","analytics","getOverview","getTrends","users","getUsers","updateUserRole","role","search","query","q","system","healthCheck","testConnection","apiUtils","connected","healthy","batch","requests","all","retry","fn","retries","delay","resolve","setTimeout","then","result","warn"],"sources":["C:/Users/Wailer/Downloads/luct_reporting_app_/luct_reporting_app/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base API URL (from frontend .env)\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL\r\n  ? `${process.env.REACT_APP_API_URL}/api`\r\n  : \"https://luct-tcm7.onrender.com/api\";\r\n\r\n// Enhanced API endpoints with all routes\r\nexport const API_ENDPOINTS = {\r\n  // Auth\r\n  AUTH: {\r\n    REGISTER: `${API_BASE_URL}/auth/register`,\r\n    LOGIN: `${API_BASE_URL}/auth/login`,\r\n    ME: `${API_BASE_URL}/auth/me`,\r\n  },\r\n\r\n  // Data Management\r\n  DATA: {\r\n    FACULTIES: `${API_BASE_URL}/faculties`,\r\n    COURSES: `${API_BASE_URL}/courses`,\r\n    COURSES_BY_ID: (id) => `${API_BASE_URL}/courses/${id}`,\r\n    CLASSES: `${API_BASE_URL}/classes`,\r\n    CLASSES_BY_ID: (id) => `${API_BASE_URL}/classes/${id}`,\r\n    MY_CLASSES: `${API_BASE_URL}/my-classes`,\r\n    LECTURERS: `${API_BASE_URL}/lecturers`,\r\n  },\r\n\r\n  // Reports Management\r\n  REPORTS: {\r\n    LIST: `${API_BASE_URL}/reports`,\r\n    STATS: `${API_BASE_URL}/reports/stats`,\r\n    COURSE_STATS: `${API_BASE_URL}/reports/course-stats`,\r\n    WEEKLY_TREND: `${API_BASE_URL}/reports/weekly-trend`,\r\n    BY_ID: (id) => `${API_BASE_URL}/reports/${id}`,\r\n    FEEDBACK: (id) => `${API_BASE_URL}/reports/${id}/feedback`,\r\n  },\r\n\r\n  // Ratings System\r\n  RATINGS: {\r\n    SUBMIT: `${API_BASE_URL}/ratings`,\r\n    MY_RATINGS: `${API_BASE_URL}/ratings/my-ratings`,\r\n    LECTURER_RATINGS: `${API_BASE_URL}/ratings/lecturer`,\r\n  },\r\n\r\n  // Student Monitoring\r\n  STUDENT: {\r\n    ATTENDANCE: `${API_BASE_URL}/students/attendance`,\r\n    STATS: `${API_BASE_URL}/students/stats`,\r\n    PERFORMANCE: `${API_BASE_URL}/students/performance`,\r\n  },\r\n\r\n  // Analytics & Monitoring\r\n  ANALYTICS: {\r\n    OVERVIEW: `${API_BASE_URL}/analytics/overview`,\r\n    TRENDS: `${API_BASE_URL}/analytics/trends`,\r\n  },\r\n\r\n  // User Management\r\n  USERS: {\r\n    LIST: `${API_BASE_URL}/users`,\r\n    UPDATE_ROLE: (id) => `${API_BASE_URL}/users/${id}/role`,\r\n  },\r\n\r\n  // Search\r\n  SEARCH: `${API_BASE_URL}/search`,\r\n\r\n  // System\r\n  SYSTEM: {\r\n    HEALTH: `${API_BASE_URL}/health`,\r\n    TEST: `${API_BASE_URL}/test`,\r\n  },\r\n};\r\n\r\n// Get token from localStorage with fallback\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n};\r\n\r\n// Enhanced API instance with interceptors\r\nconst createApiInstance = () => {\r\n  const instance = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    timeout: 30000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  // Request interceptor\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      const token = getAuthToken();\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      \r\n      // Log API calls in development\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`🚀 ${config.method?.toUpperCase()} ${config.url}`, config.data || config.params || '');\r\n      }\r\n      \r\n      return config;\r\n    },\r\n    (error) => {\r\n      console.error('❌ Request interceptor error:', error);\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  // Response interceptor\r\n  instance.interceptors.response.use(\r\n    (response) => {\r\n      return response;\r\n    },\r\n    (error) => {\r\n      const { status, data } = error.response || {};\r\n      \r\n      // Handle authentication errors\r\n      if (status === 401) {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"user\");\r\n        \r\n        // Only redirect if not already on login page\r\n        if (!window.location.pathname.includes('/login')) {\r\n          window.location.href = \"/login?session_expired=true\";\r\n        }\r\n      }\r\n      \r\n      // Enhanced error logging\r\n      console.error('❌ API Error:', {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        status: status,\r\n        message: data?.message || error.message,\r\n        data: data\r\n      });\r\n      \r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return instance;\r\n};\r\n\r\nconst apiInstance = createApiInstance();\r\n\r\n// Enhanced API call wrapper with better error handling\r\nexport const apiCall = async (endpoint, options = {}) => {\r\n  try {\r\n    const config = {\r\n      url: endpoint,\r\n      ...options,\r\n    };\r\n\r\n    const response = await apiInstance(config);\r\n    \r\n    // Handle backend response format\r\n    if (response.data && response.data.success === false) {\r\n      throw new Error(response.data.message || \"Request failed\");\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    const { status, data } = error.response || {};\r\n    \r\n    // Create user-friendly error messages\r\n    let userMessage = \"An unexpected error occurred\";\r\n    \r\n    if (status === 400) {\r\n      userMessage = data?.message || \"Invalid request data\";\r\n    } else if (status === 401) {\r\n      userMessage = \"Authentication required\";\r\n    } else if (status === 403) {\r\n      userMessage = \"You don't have permission to perform this action\";\r\n    } else if (status === 404) {\r\n      userMessage = \"Resource not found\";\r\n    } else if (status === 409) {\r\n      userMessage = \"Resource already exists\";\r\n    } else if (status === 500) {\r\n      userMessage = \"Server error. Please try again later\";\r\n    } else if (error.message) {\r\n      userMessage = error.message;\r\n    }\r\n    \r\n    throw {\r\n      success: false,\r\n      message: userMessage,\r\n      status: status,\r\n      data: data,\r\n      originalError: error\r\n    };\r\n  }\r\n};\r\n\r\n// Enhanced API methods with consistent response format\r\nexport const api = {\r\n  get: async (endpoint, params = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"GET\",\r\n        params \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Data retrieved successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  post: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"POST\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Created successfully\",\r\n        status: 201\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  put: async (endpoint, data = {}) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"PUT\", \r\n        data \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Updated successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n  \r\n  delete: async (endpoint) => {\r\n    try {\r\n      const response = await apiCall(endpoint, { \r\n        method: \"DELETE\" \r\n      });\r\n      return {\r\n        success: true,\r\n        data: response.data || response,\r\n        message: response.message || \"Deleted successfully\",\r\n        status: 200\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        message: error.message,\r\n        error: error.data,\r\n        status: error.status\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n// Convenience methods for specific endpoints\r\nexport const apiMethods = {\r\n  // Auth\r\n  auth: {\r\n    login: (credentials) => api.post(API_ENDPOINTS.AUTH.LOGIN, credentials),\r\n    register: (userData) => api.post(API_ENDPOINTS.AUTH.REGISTER, userData),\r\n    getProfile: () => api.get(API_ENDPOINTS.AUTH.ME),\r\n  },\r\n\r\n  // Data Management\r\n  data: {\r\n    getFaculties: () => api.get(API_ENDPOINTS.DATA.FACULTIES),\r\n    getCourses: () => api.get(API_ENDPOINTS.DATA.COURSES),\r\n    getCourseById: (id) => api.get(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\r\n    createCourse: (data) => api.post(API_ENDPOINTS.DATA.COURSES, data),\r\n    updateCourse: (id, data) => api.put(API_ENDPOINTS.DATA.COURSES_BY_ID(id), data),\r\n    deleteCourse: (id) => api.delete(API_ENDPOINTS.DATA.COURSES_BY_ID(id)),\r\n    getClasses: () => api.get(API_ENDPOINTS.DATA.CLASSES),\r\n    getClassById: (id) => api.get(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\r\n    createClass: (data) => api.post(API_ENDPOINTS.DATA.CLASSES, data),\r\n    updateClass: (id, data) => api.put(API_ENDPOINTS.DATA.CLASSES_BY_ID(id), data),\r\n    deleteClass: (id) => api.delete(API_ENDPOINTS.DATA.CLASSES_BY_ID(id)),\r\n    getMyClasses: () => api.get(API_ENDPOINTS.DATA.MY_CLASSES),\r\n    getLecturers: () => api.get(API_ENDPOINTS.DATA.LECTURERS),\r\n  },\r\n\r\n  // Reports\r\n  reports: {\r\n    getReports: (params = {}) => api.get(API_ENDPOINTS.REPORTS.LIST, params),\r\n    getReportStats: () => api.get(API_ENDPOINTS.REPORTS.STATS),\r\n    getCourseStats: () => api.get(API_ENDPOINTS.REPORTS.COURSE_STATS),\r\n    getWeeklyTrend: () => api.get(API_ENDPOINTS.REPORTS.WEEKLY_TREND),\r\n    getReportById: (id) => api.get(API_ENDPOINTS.REPORTS.BY_ID(id)),\r\n    createReport: (data) => api.post(API_ENDPOINTS.REPORTS.LIST, data),\r\n    submitFeedback: (id, feedback) => api.post(API_ENDPOINTS.REPORTS.FEEDBACK(id), { feedback }),\r\n    getFeedback: (id) => api.get(API_ENDPOINTS.REPORTS.FEEDBACK(id)),\r\n  },\r\n\r\n  // Ratings\r\n  ratings: {\r\n    getMyRatings: () => api.get(API_ENDPOINTS.RATINGS.MY_RATINGS),\r\n    getLecturerRatings: () => api.get(API_ENDPOINTS.RATINGS.LECTURER_RATINGS),\r\n    submitRating: (ratingData) => api.post(API_ENDPOINTS.RATINGS.SUBMIT, ratingData),\r\n  },\r\n\r\n  // Student Monitoring\r\n  student: {\r\n    getAttendance: (params = {}) => api.get(API_ENDPOINTS.STUDENT.ATTENDANCE, params),\r\n    getStats: (params = {}) => api.get(API_ENDPOINTS.STUDENT.STATS, params),\r\n    getPerformance: () => api.get(API_ENDPOINTS.STUDENT.PERFORMANCE),\r\n  },\r\n\r\n  // Analytics\r\n  analytics: {\r\n    getOverview: () => api.get(API_ENDPOINTS.ANALYTICS.OVERVIEW),\r\n    getTrends: () => api.get(API_ENDPOINTS.ANALYTICS.TRENDS),\r\n  },\r\n\r\n  // User Management\r\n  users: {\r\n    getUsers: () => api.get(API_ENDPOINTS.USERS.LIST),\r\n    updateUserRole: (id, role) => api.put(API_ENDPOINTS.USERS.UPDATE_ROLE(id), { role }),\r\n  },\r\n\r\n  // Search\r\n  search: (query) => api.get(API_ENDPOINTS.SEARCH, { q: query }),\r\n\r\n  // System\r\n  system: {\r\n    healthCheck: () => api.get(API_ENDPOINTS.SYSTEM.HEALTH),\r\n    testConnection: () => api.get(API_ENDPOINTS.SYSTEM.TEST),\r\n  },\r\n};\r\n\r\n// Utility functions\r\nexport const apiUtils = {\r\n  // Test backend connection\r\n  testConnection: async () => {\r\n    try {\r\n      const response = await apiMethods.system.testConnection();\r\n      console.log('✅ Backend connection successful');\r\n      return { connected: true, data: response.data };\r\n    } catch (error) {\r\n      console.error('❌ Backend connection failed:', error.message);\r\n      return { connected: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  healthCheck: async () => {\r\n    try {\r\n      const response = await apiMethods.system.healthCheck();\r\n      return { healthy: true, data: response.data };\r\n    } catch (error) {\r\n      return { healthy: false, error: error.message };\r\n    }\r\n  },\r\n\r\n  // Batch requests\r\n  batch: (requests) => Promise.all(requests),\r\n\r\n  // Retry mechanism\r\n  retry: async (fn, retries = 3, delay = 1000) => {\r\n    try {\r\n      return await fn();\r\n    } catch (error) {\r\n      if (retries === 0) throw error;\r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n      return apiUtils.retry(fn, retries - 1, delay * 2);\r\n    }\r\n  },\r\n};\r\n\r\n// Initialize connection test on import\r\nif (typeof window !== 'undefined') {\r\n  apiUtils.testConnection().then(result => {\r\n    if (result.connected) {\r\n      console.log('🎉 API initialized successfully');\r\n    } else {\r\n      console.warn('⚠️ API connection issues - some features may not work');\r\n    }\r\n  });\r\n}\r\n\r\nexport default api;"],"mappings":"8JAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAAC,MAAA,CAC3CH,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAChC,oCAAoC,CAExC;AACA,MAAO,MAAM,CAAAE,aAAa,CAAG,CAC3B;AACAC,IAAI,CAAE,CACJC,QAAQ,IAAAH,MAAA,CAAKJ,YAAY,kBAAgB,CACzCQ,KAAK,IAAAJ,MAAA,CAAKJ,YAAY,eAAa,CACnCS,EAAE,IAAAL,MAAA,CAAKJ,YAAY,YACrB,CAAC,CAED;AACAU,IAAI,CAAE,CACJC,SAAS,IAAAP,MAAA,CAAKJ,YAAY,cAAY,CACtCY,OAAO,IAAAR,MAAA,CAAKJ,YAAY,YAAU,CAClCa,aAAa,CAAGC,EAAE,KAAAV,MAAA,CAAQJ,YAAY,cAAAI,MAAA,CAAYU,EAAE,CAAE,CACtDC,OAAO,IAAAX,MAAA,CAAKJ,YAAY,YAAU,CAClCgB,aAAa,CAAGF,EAAE,KAAAV,MAAA,CAAQJ,YAAY,cAAAI,MAAA,CAAYU,EAAE,CAAE,CACtDG,UAAU,IAAAb,MAAA,CAAKJ,YAAY,eAAa,CACxCkB,SAAS,IAAAd,MAAA,CAAKJ,YAAY,cAC5B,CAAC,CAED;AACAmB,OAAO,CAAE,CACPC,IAAI,IAAAhB,MAAA,CAAKJ,YAAY,YAAU,CAC/BqB,KAAK,IAAAjB,MAAA,CAAKJ,YAAY,kBAAgB,CACtCsB,YAAY,IAAAlB,MAAA,CAAKJ,YAAY,yBAAuB,CACpDuB,YAAY,IAAAnB,MAAA,CAAKJ,YAAY,yBAAuB,CACpDwB,KAAK,CAAGV,EAAE,KAAAV,MAAA,CAAQJ,YAAY,cAAAI,MAAA,CAAYU,EAAE,CAAE,CAC9CW,QAAQ,CAAGX,EAAE,KAAAV,MAAA,CAAQJ,YAAY,cAAAI,MAAA,CAAYU,EAAE,aACjD,CAAC,CAED;AACAY,OAAO,CAAE,CACPC,MAAM,IAAAvB,MAAA,CAAKJ,YAAY,YAAU,CACjC4B,UAAU,IAAAxB,MAAA,CAAKJ,YAAY,uBAAqB,CAChD6B,gBAAgB,IAAAzB,MAAA,CAAKJ,YAAY,qBACnC,CAAC,CAED;AACA8B,OAAO,CAAE,CACPC,UAAU,IAAA3B,MAAA,CAAKJ,YAAY,wBAAsB,CACjDqB,KAAK,IAAAjB,MAAA,CAAKJ,YAAY,mBAAiB,CACvCgC,WAAW,IAAA5B,MAAA,CAAKJ,YAAY,yBAC9B,CAAC,CAED;AACAiC,SAAS,CAAE,CACTC,QAAQ,IAAA9B,MAAA,CAAKJ,YAAY,uBAAqB,CAC9CmC,MAAM,IAAA/B,MAAA,CAAKJ,YAAY,qBACzB,CAAC,CAED;AACAoC,KAAK,CAAE,CACLhB,IAAI,IAAAhB,MAAA,CAAKJ,YAAY,UAAQ,CAC7BqC,WAAW,CAAGvB,EAAE,KAAAV,MAAA,CAAQJ,YAAY,YAAAI,MAAA,CAAUU,EAAE,SAClD,CAAC,CAED;AACAwB,MAAM,IAAAlC,MAAA,CAAKJ,YAAY,WAAS,CAEhC;AACAuC,MAAM,CAAE,CACNC,MAAM,IAAApC,MAAA,CAAKJ,YAAY,WAAS,CAChCyC,IAAI,IAAArC,MAAA,CAAKJ,YAAY,SACvB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA0C,YAAY,CAAGA,CAAA,GAAM,CAChC,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC,CACzE,CAAC,CAED;AACA,KAAM,CAAAE,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,QAAQ,CAAGhD,KAAK,CAACiD,MAAM,CAAC,CAC5BC,OAAO,CAAEjD,YAAY,CACrBkD,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAJ,QAAQ,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,EAAK,CACV,KAAM,CAAAC,KAAK,CAAGd,YAAY,CAAC,CAAC,CAC5B,GAAIc,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACM,aAAa,WAAArD,MAAA,CAAaoD,KAAK,CAAE,CAClD,CAEA;AACA,GAAIvD,OAAO,CAACC,GAAG,CAACwD,QAAQ,GAAK,aAAa,CAAE,KAAAC,cAAA,CAC1CC,OAAO,CAACC,GAAG,iBAAAzD,MAAA,EAAAuD,cAAA,CAAOJ,MAAM,CAACO,MAAM,UAAAH,cAAA,iBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,MAAA3D,MAAA,CAAImD,MAAM,CAACS,GAAG,EAAIT,MAAM,CAACU,IAAI,EAAIV,MAAM,CAACW,MAAM,EAAI,EAAE,CAAC,CACrG,CAEA,MAAO,CAAAX,MAAM,CACf,CAAC,CACAY,KAAK,EAAK,CACTP,OAAO,CAACO,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACApB,QAAQ,CAACK,YAAY,CAACkB,QAAQ,CAAChB,GAAG,CAC/BgB,QAAQ,EAAK,CACZ,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,KAAAI,aAAA,CAAAC,cAAA,CACT,KAAM,CAAEC,MAAM,CAAER,IAAK,CAAC,CAAGE,KAAK,CAACG,QAAQ,EAAI,CAAC,CAAC,CAE7C;AACA,GAAIG,MAAM,GAAK,GAAG,CAAE,CAClB9B,YAAY,CAAC+B,UAAU,CAAC,OAAO,CAAC,CAChC/B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC,CAC/B7B,cAAc,CAAC6B,UAAU,CAAC,OAAO,CAAC,CAClC7B,cAAc,CAAC6B,UAAU,CAAC,MAAM,CAAC,CAEjC;AACA,GAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAE,CAChDH,MAAM,CAACC,QAAQ,CAACG,IAAI,CAAG,6BAA6B,CACtD,CACF,CAEA;AACAnB,OAAO,CAACO,KAAK,CAAC,cAAc,CAAE,CAC5BH,GAAG,EAAAO,aAAA,CAAEJ,KAAK,CAACZ,MAAM,UAAAgB,aAAA,iBAAZA,aAAA,CAAcP,GAAG,CACtBF,MAAM,EAAAU,cAAA,CAAEL,KAAK,CAACZ,MAAM,UAAAiB,cAAA,iBAAZA,cAAA,CAAcV,MAAM,CAC5BW,MAAM,CAAEA,MAAM,CACdO,OAAO,CAAE,CAAAf,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEe,OAAO,GAAIb,KAAK,CAACa,OAAO,CACvCf,IAAI,CAAEA,IACR,CAAC,CAAC,CAEF,MAAO,CAAAG,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,MAAO,CAAApB,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAkC,WAAW,CAAGnC,iBAAiB,CAAC,CAAC,CAEvC;AACA,MAAO,MAAM,CAAAoC,OAAO,CAAG,cAAAA,CAAOC,QAAQ,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClD,GAAI,CACF,KAAM,CAAA9B,MAAM,CAAAiC,aAAA,EACVxB,GAAG,CAAEmB,QAAQ,EACVC,OAAO,CACX,CAED,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAW,WAAW,CAAC1B,MAAM,CAAC,CAE1C;AACA,GAAIe,QAAQ,CAACL,IAAI,EAAIK,QAAQ,CAACL,IAAI,CAACwB,OAAO,GAAK,KAAK,CAAE,CACpD,KAAM,IAAI,CAAAC,KAAK,CAACpB,QAAQ,CAACL,IAAI,CAACe,OAAO,EAAI,gBAAgB,CAAC,CAC5D,CAEA,MAAO,CAAAV,QAAQ,CAACL,IAAI,CACtB,CAAE,MAAOE,KAAK,CAAE,CACd,KAAM,CAAEM,MAAM,CAAER,IAAK,CAAC,CAAGE,KAAK,CAACG,QAAQ,EAAI,CAAC,CAAC,CAE7C;AACA,GAAI,CAAAqB,WAAW,CAAG,8BAA8B,CAEhD,GAAIlB,MAAM,GAAK,GAAG,CAAE,CAClBkB,WAAW,CAAG,CAAA1B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEe,OAAO,GAAI,sBAAsB,CACvD,CAAC,IAAM,IAAIP,MAAM,GAAK,GAAG,CAAE,CACzBkB,WAAW,CAAG,yBAAyB,CACzC,CAAC,IAAM,IAAIlB,MAAM,GAAK,GAAG,CAAE,CACzBkB,WAAW,CAAG,kDAAkD,CAClE,CAAC,IAAM,IAAIlB,MAAM,GAAK,GAAG,CAAE,CACzBkB,WAAW,CAAG,oBAAoB,CACpC,CAAC,IAAM,IAAIlB,MAAM,GAAK,GAAG,CAAE,CACzBkB,WAAW,CAAG,yBAAyB,CACzC,CAAC,IAAM,IAAIlB,MAAM,GAAK,GAAG,CAAE,CACzBkB,WAAW,CAAG,sCAAsC,CACtD,CAAC,IAAM,IAAIxB,KAAK,CAACa,OAAO,CAAE,CACxBW,WAAW,CAAGxB,KAAK,CAACa,OAAO,CAC7B,CAEA,KAAM,CACJS,OAAO,CAAE,KAAK,CACdT,OAAO,CAAEW,WAAW,CACpBlB,MAAM,CAAEA,MAAM,CACdR,IAAI,CAAEA,IAAI,CACV2B,aAAa,CAAEzB,KACjB,CAAC,CACH,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA0B,GAAG,CAAG,CACjBC,GAAG,CAAE,cAAAA,CAAOX,QAAQ,CAAkB,IAAhB,CAAAjB,MAAM,CAAAmB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC/B,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAY,OAAO,CAACC,QAAQ,CAAE,CACvCrB,MAAM,CAAE,KAAK,CACbI,MACF,CAAC,CAAC,CACF,MAAO,CACLuB,OAAO,CAAE,IAAI,CACbxB,IAAI,CAAEK,QAAQ,CAACL,IAAI,EAAIK,QAAQ,CAC/BU,OAAO,CAAEV,QAAQ,CAACU,OAAO,EAAI,6BAA6B,CAC1DP,MAAM,CAAE,GACV,CAAC,CACH,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CACLsB,OAAO,CAAE,KAAK,CACdT,OAAO,CAAEb,KAAK,CAACa,OAAO,CACtBb,KAAK,CAAEA,KAAK,CAACF,IAAI,CACjBQ,MAAM,CAAEN,KAAK,CAACM,MAChB,CAAC,CACH,CACF,CAAC,CAEDsB,IAAI,CAAE,cAAAA,CAAOZ,QAAQ,CAAgB,IAAd,CAAAlB,IAAI,CAAAoB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC9B,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAY,OAAO,CAACC,QAAQ,CAAE,CACvCrB,MAAM,CAAE,MAAM,CACdG,IACF,CAAC,CAAC,CACF,MAAO,CACLwB,OAAO,CAAE,IAAI,CACbxB,IAAI,CAAEK,QAAQ,CAACL,IAAI,EAAIK,QAAQ,CAC/BU,OAAO,CAAEV,QAAQ,CAACU,OAAO,EAAI,sBAAsB,CACnDP,MAAM,CAAE,GACV,CAAC,CACH,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CACLsB,OAAO,CAAE,KAAK,CACdT,OAAO,CAAEb,KAAK,CAACa,OAAO,CACtBb,KAAK,CAAEA,KAAK,CAACF,IAAI,CACjBQ,MAAM,CAAEN,KAAK,CAACM,MAChB,CAAC,CACH,CACF,CAAC,CAEDuB,GAAG,CAAE,cAAAA,CAAOb,QAAQ,CAAgB,IAAd,CAAAlB,IAAI,CAAAoB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC7B,GAAI,CACF,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAY,OAAO,CAACC,QAAQ,CAAE,CACvCrB,MAAM,CAAE,KAAK,CACbG,IACF,CAAC,CAAC,CACF,MAAO,CACLwB,OAAO,CAAE,IAAI,CACbxB,IAAI,CAAEK,QAAQ,CAACL,IAAI,EAAIK,QAAQ,CAC/BU,OAAO,CAAEV,QAAQ,CAACU,OAAO,EAAI,sBAAsB,CACnDP,MAAM,CAAE,GACV,CAAC,CACH,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CACLsB,OAAO,CAAE,KAAK,CACdT,OAAO,CAAEb,KAAK,CAACa,OAAO,CACtBb,KAAK,CAAEA,KAAK,CAACF,IAAI,CACjBQ,MAAM,CAAEN,KAAK,CAACM,MAChB,CAAC,CACH,CACF,CAAC,CAEDwB,MAAM,CAAE,KAAO,CAAAd,QAAQ,EAAK,CAC1B,GAAI,CACF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAY,OAAO,CAACC,QAAQ,CAAE,CACvCrB,MAAM,CAAE,QACV,CAAC,CAAC,CACF,MAAO,CACL2B,OAAO,CAAE,IAAI,CACbxB,IAAI,CAAEK,QAAQ,CAACL,IAAI,EAAIK,QAAQ,CAC/BU,OAAO,CAAEV,QAAQ,CAACU,OAAO,EAAI,sBAAsB,CACnDP,MAAM,CAAE,GACV,CAAC,CACH,CAAE,MAAON,KAAK,CAAE,CACd,MAAO,CACLsB,OAAO,CAAE,KAAK,CACdT,OAAO,CAAEb,KAAK,CAACa,OAAO,CACtBb,KAAK,CAAEA,KAAK,CAACF,IAAI,CACjBQ,MAAM,CAAEN,KAAK,CAACM,MAChB,CAAC,CACH,CACF,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAyB,UAAU,CAAG,CACxB;AACAC,IAAI,CAAE,CACJC,KAAK,CAAGC,WAAW,EAAKR,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACC,IAAI,CAACE,KAAK,CAAE6F,WAAW,CAAC,CACvEC,QAAQ,CAAGC,QAAQ,EAAKV,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACC,IAAI,CAACC,QAAQ,CAAEgG,QAAQ,CAAC,CACvEC,UAAU,CAAEA,CAAA,GAAMX,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACC,IAAI,CAACG,EAAE,CACjD,CAAC,CAED;AACAwD,IAAI,CAAE,CACJwC,YAAY,CAAEA,CAAA,GAAMZ,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACC,SAAS,CAAC,CACzD+F,UAAU,CAAEA,CAAA,GAAMb,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACE,OAAO,CAAC,CACrD+F,aAAa,CAAG7F,EAAE,EAAK+E,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACG,aAAa,CAACC,EAAE,CAAC,CAAC,CACpE8F,YAAY,CAAG3C,IAAI,EAAK4B,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACK,IAAI,CAACE,OAAO,CAAEqD,IAAI,CAAC,CAClE4C,YAAY,CAAEA,CAAC/F,EAAE,CAAEmD,IAAI,GAAK4B,GAAG,CAACG,GAAG,CAAC3F,aAAa,CAACK,IAAI,CAACG,aAAa,CAACC,EAAE,CAAC,CAAEmD,IAAI,CAAC,CAC/E6C,YAAY,CAAGhG,EAAE,EAAK+E,GAAG,CAACI,MAAM,CAAC5F,aAAa,CAACK,IAAI,CAACG,aAAa,CAACC,EAAE,CAAC,CAAC,CACtEiG,UAAU,CAAEA,CAAA,GAAMlB,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACK,OAAO,CAAC,CACrDiG,YAAY,CAAGlG,EAAE,EAAK+E,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACM,aAAa,CAACF,EAAE,CAAC,CAAC,CACnEmG,WAAW,CAAGhD,IAAI,EAAK4B,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACK,IAAI,CAACK,OAAO,CAAEkD,IAAI,CAAC,CACjEiD,WAAW,CAAEA,CAACpG,EAAE,CAAEmD,IAAI,GAAK4B,GAAG,CAACG,GAAG,CAAC3F,aAAa,CAACK,IAAI,CAACM,aAAa,CAACF,EAAE,CAAC,CAAEmD,IAAI,CAAC,CAC9EkD,WAAW,CAAGrG,EAAE,EAAK+E,GAAG,CAACI,MAAM,CAAC5F,aAAa,CAACK,IAAI,CAACM,aAAa,CAACF,EAAE,CAAC,CAAC,CACrEsG,YAAY,CAAEA,CAAA,GAAMvB,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACO,UAAU,CAAC,CAC1DoG,YAAY,CAAEA,CAAA,GAAMxB,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACK,IAAI,CAACQ,SAAS,CAC1D,CAAC,CAED;AACAoG,OAAO,CAAE,CACPC,UAAU,CAAE,QAAAA,CAAA,KAAC,CAAArD,MAAM,CAAAmB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAQ,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACC,IAAI,CAAE8C,MAAM,CAAC,GACxEsD,cAAc,CAAEA,CAAA,GAAM3B,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACE,KAAK,CAAC,CAC1DoG,cAAc,CAAEA,CAAA,GAAM5B,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACG,YAAY,CAAC,CACjEoG,cAAc,CAAEA,CAAA,GAAM7B,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACI,YAAY,CAAC,CACjEoG,aAAa,CAAG7G,EAAE,EAAK+E,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACK,KAAK,CAACV,EAAE,CAAC,CAAC,CAC/D8G,YAAY,CAAG3D,IAAI,EAAK4B,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACc,OAAO,CAACC,IAAI,CAAE6C,IAAI,CAAC,CAClE4D,cAAc,CAAEA,CAAC/G,EAAE,CAAEgH,QAAQ,GAAKjC,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACc,OAAO,CAACM,QAAQ,CAACX,EAAE,CAAC,CAAE,CAAEgH,QAAS,CAAC,CAAC,CAC5FC,WAAW,CAAGjH,EAAE,EAAK+E,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACc,OAAO,CAACM,QAAQ,CAACX,EAAE,CAAC,CACjE,CAAC,CAED;AACAkH,OAAO,CAAE,CACPC,YAAY,CAAEA,CAAA,GAAMpC,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACqB,OAAO,CAACE,UAAU,CAAC,CAC7DsG,kBAAkB,CAAEA,CAAA,GAAMrC,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACqB,OAAO,CAACG,gBAAgB,CAAC,CACzEsG,YAAY,CAAGC,UAAU,EAAKvC,GAAG,CAACE,IAAI,CAAC1F,aAAa,CAACqB,OAAO,CAACC,MAAM,CAAEyG,UAAU,CACjF,CAAC,CAED;AACAC,OAAO,CAAE,CACPC,aAAa,CAAE,QAAAA,CAAA,KAAC,CAAApE,MAAM,CAAAmB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAQ,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACyB,OAAO,CAACC,UAAU,CAAEmC,MAAM,CAAC,GACjFqE,QAAQ,CAAE,QAAAA,CAAA,KAAC,CAAArE,MAAM,CAAAmB,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,OAAK,CAAAQ,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACyB,OAAO,CAACT,KAAK,CAAE6C,MAAM,CAAC,GACvEsE,cAAc,CAAEA,CAAA,GAAM3C,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACyB,OAAO,CAACE,WAAW,CACjE,CAAC,CAED;AACAyG,SAAS,CAAE,CACTC,WAAW,CAAEA,CAAA,GAAM7C,GAAG,CAACC,GAAG,CAACzF,aAAa,CAAC4B,SAAS,CAACC,QAAQ,CAAC,CAC5DyG,SAAS,CAAEA,CAAA,GAAM9C,GAAG,CAACC,GAAG,CAACzF,aAAa,CAAC4B,SAAS,CAACE,MAAM,CACzD,CAAC,CAED;AACAyG,KAAK,CAAE,CACLC,QAAQ,CAAEA,CAAA,GAAMhD,GAAG,CAACC,GAAG,CAACzF,aAAa,CAAC+B,KAAK,CAAChB,IAAI,CAAC,CACjD0H,cAAc,CAAEA,CAAChI,EAAE,CAAEiI,IAAI,GAAKlD,GAAG,CAACG,GAAG,CAAC3F,aAAa,CAAC+B,KAAK,CAACC,WAAW,CAACvB,EAAE,CAAC,CAAE,CAAEiI,IAAK,CAAC,CACrF,CAAC,CAED;AACAC,MAAM,CAAGC,KAAK,EAAKpD,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACiC,MAAM,CAAE,CAAE4G,CAAC,CAAED,KAAM,CAAC,CAAC,CAE9D;AACAE,MAAM,CAAE,CACNC,WAAW,CAAEA,CAAA,GAAMvD,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACkC,MAAM,CAACC,MAAM,CAAC,CACvD6G,cAAc,CAAEA,CAAA,GAAMxD,GAAG,CAACC,GAAG,CAACzF,aAAa,CAACkC,MAAM,CAACE,IAAI,CACzD,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA6G,QAAQ,CAAG,CACtB;AACAD,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAA/E,QAAQ,CAAG,KAAM,CAAA4B,UAAU,CAACiD,MAAM,CAACE,cAAc,CAAC,CAAC,CACzDzF,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9C,MAAO,CAAE0F,SAAS,CAAE,IAAI,CAAEtF,IAAI,CAAEK,QAAQ,CAACL,IAAK,CAAC,CACjD,CAAE,MAAOE,KAAK,CAAE,CACdP,OAAO,CAACO,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAACa,OAAO,CAAC,CAC5D,MAAO,CAAEuE,SAAS,CAAE,KAAK,CAAEpF,KAAK,CAAEA,KAAK,CAACa,OAAQ,CAAC,CACnD,CACF,CAAC,CAED;AACAoE,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,GAAI,CACF,KAAM,CAAA9E,QAAQ,CAAG,KAAM,CAAA4B,UAAU,CAACiD,MAAM,CAACC,WAAW,CAAC,CAAC,CACtD,MAAO,CAAEI,OAAO,CAAE,IAAI,CAAEvF,IAAI,CAAEK,QAAQ,CAACL,IAAK,CAAC,CAC/C,CAAE,MAAOE,KAAK,CAAE,CACd,MAAO,CAAEqF,OAAO,CAAE,KAAK,CAAErF,KAAK,CAAEA,KAAK,CAACa,OAAQ,CAAC,CACjD,CACF,CAAC,CAED;AACAyE,KAAK,CAAGC,QAAQ,EAAKtF,OAAO,CAACuF,GAAG,CAACD,QAAQ,CAAC,CAE1C;AACAE,KAAK,CAAE,cAAAA,CAAOC,EAAE,CAAgC,IAA9B,CAAAC,OAAO,CAAAzE,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAA0E,KAAK,CAAA1E,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACzC,GAAI,CACF,MAAO,MAAM,CAAAwE,EAAE,CAAC,CAAC,CACnB,CAAE,MAAO1F,KAAK,CAAE,CACd,GAAI2F,OAAO,GAAK,CAAC,CAAE,KAAM,CAAA3F,KAAK,CAC9B,KAAM,IAAI,CAAAC,OAAO,CAAC4F,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAED,KAAK,CAAC,CAAC,CACxD,MAAO,CAAAT,QAAQ,CAACM,KAAK,CAACC,EAAE,CAAEC,OAAO,CAAG,CAAC,CAAEC,KAAK,CAAG,CAAC,CAAC,CACnD,CACF,CACF,CAAC,CAED;AACA,GAAI,MAAO,CAAApF,MAAM,GAAK,WAAW,CAAE,CACjC2E,QAAQ,CAACD,cAAc,CAAC,CAAC,CAACa,IAAI,CAACC,MAAM,EAAI,CACvC,GAAIA,MAAM,CAACZ,SAAS,CAAE,CACpB3F,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CAAC,IAAM,CACLD,OAAO,CAACwG,IAAI,CAAC,uDAAuD,CAAC,CACvE,CACF,CAAC,CAAC,CACJ,CAEA,cAAe,CAAAvE,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}